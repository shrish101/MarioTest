################# CSC258 Assembly Final Project ###################
# This file contains our implementation of Dr Mario.
#
# Student 1: Shrish Luitel, 1010287244
# Student 2: Ujjvel Lijo, 1009892948 
#
# We assert that the code submitted here is entirely our own 
# creation, and will indicate otherwise when it is not.
#
######################## Bitmap Display Configuration ########################
# - Unit width in pixels:       1
# - Unit height in pixels:      1
# - Display width in pixels:    64
# - Display height in pixels:   64
# - Base Address for Display:   0x10008000 ($gp)
##############################################################################

    .data
    
     
##############################################################################
# Immutable Data
##############################################################################
# The address of the bitmap display. Don't forget to connect it!
ADDR_DSPL:
    .word 0x10008000
# The address of the keyboard. Don't forget to connect it!
ADDR_KBRD:
    .word 0xffff0000

mario_jump:
    .word 0xFCBA06, 0xFCBA06, 0xFCBA06, 0x000000, 0x000000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFCBA06, 0xFCBA06, 0xD10000, 0xD00102, 0xD20002, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x727000, 0x727000, 0x757100, 0x000000, 0xFCBA06, 0x757100, 0xFCBA06, 0xFDBB07, 0x757100, 0x757100, 0x757100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x757100, 0x757100, 0xFDBB07, 0xFDBB07, 0xFCBA06, 0x747200, 0xFCBA06, 0xFCBA06, 0xFEB906, 0x757100, 0xFEB906, 0x757002, 0x000000, 0x000000, 0x000000, 0x000000, 0x757100, 0xFBBB06, 0xFCBA06, 0xFCBA06, 0x736F00, 0xF8B803, 0xFCBA06, 0xFCBA06, 0x777000, 0x747200, 0xFCBA06, 0x757100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x6F7103, 0x6F7103, 0x6F7105, 0x757100, 0x6D6F01, 0xFCBA06, 0xFCBA06, 0xFEBA00, 0xFFBA03, 0x6F7105, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x757100, 0xFEBE09, 0xFFBD0B, 0xFFBF0A, 0xFCBA06, 0xFCBA06, 0xFCBA06, 0xFCBA06, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x121200, 0xE3B81E, 0xFD9A25, 0xE3B81E, 0xE4B91F, 0xE4B91F, 0xFC9824, 0xE6BA22, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x687F03, 0xDD0201, 0x757100, 0x757100, 0x687F03, 0xDE0201, 0x757100, 0x757100, 0x757100, 0x757100, 0x747200, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xD00100, 0x757100, 0x747200, 0x757100, 0xD20000, 0x757100, 0x757100, 0x757100, 0x757100, 0x757100, 0x757100, 0x706E00, 0x000000, 0x757100, 0x000000, 0x000000, 0xCD0100, 0xD20000, 0xCC0100, 0xD20000, 0xD20000, 0x777000, 0x757100, 0x777000, 0x6F6C01, 0x716B00, 0x747102, 0xFCBA06, 0xFCBA06, 0x757100, 0x757100, 0xD20000, 0xFDBB07, 0xD20000, 0xFDBB07, 0xD00100, 0xD20000, 0xD20000, 0x757100, 0xD20000, 0x000000, 0x000000, 0xFDBB07, 0xFCBA06, 0xFEB906, 0x757100, 0x757100, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0x000000, 0x757100, 0x000000, 0xFCB908, 0x000000, 0x757100, 0x757100, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0x757100, 0x757100, 0x757100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0x757100, 0x757100, 0x757100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xD20000, 0xD20000, 0xD20000, 0xD20000, 0x000000, 0x000000, 0x757100, 0x000000

virus_sprite:
    .word 0x000000, 0x000000, 0x000000, 0x949494, 0x949494, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0x949494, 0x949494, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x949494, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0xCACACA, 0x949494, 0x000000, 0x000000, 0x000000, 0x949494, 0xCACACA, 0x000000, 0x000000, 0x000000, 0x000000, 0x313671, 0x313671, 0x313671, 0x000000, 0x000000, 0x000000, 0xCACACA, 0x949494, 0x000000, 0x949494, 0xCACACA, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x313671, 0xC9DBFF, 0x323BA9, 0xC9DBFF, 0x313671, 0x000000, 0x000000, 0x000000, 0xCACACA, 0x949494, 0x949494, 0xCACACA, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x313671, 0x131526, 0x323BA9, 0x131526, 0x313671, 0x000000, 0x000000, 0x000000, 0xCACACA, 0x949494, 0xCACACA, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x313671, 0x313671, 0x313671, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0xCCE125, 0x000000, 0x000000, 0x000000, 0xCCE125, 0x000000, 0x000000, 0xA93232, 0xA93232, 0x652A2A, 0x000000, 0x000000, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0xA9B641, 0xCCE125, 0xCCE125, 0xCCE125, 0xA9B641, 0x000000, 0xFF9C9C, 0x261313, 0xA93232, 0x261313, 0xFF9C9C, 0x000000, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0xFBFFBF, 0x353218, 0xCCE125, 0xFBFFBF, 0x353218, 0x000000, 0xFF9C9C, 0xFF9C9C, 0xA93232, 0xFF9C9C, 0xFF9C9C, 0x000000, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0xCCE125, 0xCCE125, 0xCCE125, 0xCCE125, 0xA9B641, 0x000000, 0xA93232, 0xA93232, 0xA93232, 0xA93232, 0x652A2A, 0x000000, 0xCACACA, 0x949494, 0xCACACA, 0x000000, 0xCCE125, 0xCCE125, 0xCCE125, 0xCCE125, 0xA9B641, 0x000000, 0x000000, 0x652A2A, 0xA93232, 0x652A2A, 0x000000, 0xCACACA, 0x949494, 0x949494, 0xCACACA, 0x000000, 0x000000, 0xA9B641, 0xA9B641, 0xA9B641, 0x000000, 0x000000, 0x000000, 0x652A2A, 0x000000, 0x652A2A, 0x000000, 0xCACACA, 0x949494, 0x000000, 0x949494, 0xCACACA, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0x949494, 0x000000, 0x000000, 0x000000, 0x949494, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0xCACACA, 0x949494, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x949494, 0x949494, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0x949494, 0x949494, 0x000000, 0x000000, 0x000000

virus_sprite2:
    .word 0x000000, 0x000000, 0x000000, 0x949494, 0x949494, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0x949494, 0x949494, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x949494, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0xCACACA, 0x949494, 0x000000, 0x000000, 0x000000, 0x949494, 0xCACACA, 0x000000, 0x000000, 0x000000, 0x313671, 0x313671, 0x313671, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0x949494, 0x000000, 0x949494, 0xCACACA, 0x000000, 0x000000, 0xFFFFFF, 0x313671, 0xC9DBFF, 0x323BA9, 0xC9DBFF, 0x313671, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0x949494, 0x949494, 0xCACACA, 0x000000, 0xFFFFFF, 0x000000, 0x313671, 0x131526, 0x323BA9, 0x131526, 0x313671, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0x949494, 0xCACACA, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x313671, 0x313671, 0x313671, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xA93232, 0xA93232, 0x652A2A, 0x000000, 0x000000, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF9C9C, 0x261313, 0xA93232, 0x261313, 0xFF9C9C, 0x000000, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0xCCE125, 0x000000, 0x000000, 0x000000, 0xCCE125, 0x000000, 0xFF9C9C, 0xFF9C9C, 0xA93232, 0xFF9C9C, 0xFF9C9C, 0x000000, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0xA9B641, 0xCCE125, 0xCCE125, 0xCCE125, 0xA9B641, 0x000000, 0xA93232, 0xA93232, 0xA93232, 0xA93232, 0x652A2A, 0x000000, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0xFBFFBF, 0x353218, 0xCCE125, 0xFBFFBF, 0x353218, 0x000000, 0x000000, 0x652A2A, 0xA93232, 0x652A2A, 0x000000, 0x000000, 0xCACACA, 0x949494, 0xCACACA, 0x000000, 0xCCE125, 0xCCE125, 0xCCE125, 0xCCE125, 0xA9B641, 0x000000, 0x000000, 0x652A2A, 0x000000, 0x652A2A, 0x000000, 0xCACACA, 0x949494, 0x949494, 0xCACACA, 0x000000, 0xCCE125, 0xCCE125, 0xCCE125, 0xCCE125, 0xA9B641, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0x949494, 0x000000, 0x949494, 0xCACACA, 0x000000, 0xA9B641, 0xA9B641, 0xA9B641, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0x949494, 0x000000, 0x000000, 0x000000, 0x949494, 0xCACACA, 0xCACACA, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCACACA, 0xCACACA, 0x949494, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x949494, 0x949494, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0xCACACA, 0x949494, 0x949494, 0x000000, 0x000000, 0x000000

game_over_sprite:
    .word 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x38291D, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x3D2B1F, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x392616, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x392616, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x392616, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x392616, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x392616, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x392616, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x392616, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3D2C1F, 0x3C2C1F, 0x4C321F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4D331F, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x4A3321, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x302218, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0xAC8F6E, 0xAC8F6E, 0xAC8F6E, 0xAC8F6E, 0xAC8F6E, 0xAC8F6E, 0xAC8F6E, 0xAC8F6E, 0xA58867, 0xA58867, 0xA58867, 0xA58867, 0xA58867, 0xA58867, 0xA58867, 0xA58867, 0xBBA085, 0xBCA185, 0xBCA185, 0xBCA185, 0xBCA185, 0xBCA185, 0xBCA185, 0xBCA185, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0xB7987A, 0x967958, 0x957856, 0x957856, 0x957856, 0x957856, 0x957856, 0x957856, 0x957856, 0x3C2919, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x977A58, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x3C2919, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x977A58, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x3C2919, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x977A58, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x3C2919, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x977A58, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x3C2919, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x977A58, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x3C2919, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x977A58, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x3C2919, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x402F22, 0x3F2E22, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x977A58, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x967957, 0x3C2919, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0x382516, 0xA48867, 0xA48867, 0xA48867, 0xA48867, 0xA48867, 0xA48867, 0xA48867, 0xA48867, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB8997A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x9F7C54, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9C7A51, 0x9C7A51, 0x9C7A51, 0x9C7A51, 0x9C7A51, 0x9C7A51, 0x9C7A51, 0x9C7A51, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB8997A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x9F7C54, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB8997A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x9F7C54, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB8997A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x9F7C54, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB8997A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x9F7C54, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB8997A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x9F7C54, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB8997A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x9F7C54, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906E, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xA68F77, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB8997A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0x9F7C53, 0x9E7B51, 0x9E7B51, 0x9E7B51, 0x9E7B51, 0x9E7B51, 0x9E7B51, 0x9E7B51, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906E, 0xFCFCFB, 0xFDFCFB, 0xFDFCFB, 0xFDFCFB, 0xFDFCFB, 0xFDFCFB, 0xFDFCFB, 0xFDFCFB, 0x6F4874, 0x6E4773, 0x6E4773, 0x6E4773, 0x6E4773, 0x6E4773, 0x6E4773, 0x6D4673, 0xB6987B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xBDA185, 0xBDA185, 0xBDA185, 0xBDA185, 0xBDA185, 0xBDA185, 0xBDA185, 0xBDA285, 0x704A74, 0x6E4773, 0x6E4773, 0x6E4773, 0x6E4773, 0x6E4773, 0x6E4773, 0x6E4773, 0xF6F4F5, 0xFCFCFA, 0xFCFCFA, 0xFCFCFA, 0xFCFCFA, 0xFCFCFA, 0xFCFCFA, 0xFCFCFA, 0xAA8E6E, 0xA68967, 0xA68967, 0xA68967, 0xA68967, 0xA68967, 0xA68967, 0xA68967, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xFFFFFE, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x6D4774, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xB7987B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0x6E4874, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xF9F7F9, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xAA8E6F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xFFFFFE, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x6D4774, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xB7987B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0x6E4874, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xF9F7F9, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xAA8E6F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xFFFFFE, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x6D4774, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xB7987B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0x6E4874, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xF9F7F9, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xAA8E6F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xFFFFFE, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x6D4774, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xB7987B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0x6E4874, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xF9F7F9, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xAA8E6F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xFFFFFE, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x6D4774, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xB7987B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0x6E4874, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xF9F7F9, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xAA8E6F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xFFFFFE, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x6D4774, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xB7987B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0x6E4874, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xF9F7F9, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xAA8E6F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xFFFFFE, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x6D4774, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4473, 0xB7987B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0xBDA286, 0x6E4874, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0x6C4573, 0xF9F7F9, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xAA8E6F, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xBA9C7F, 0xBA9C7F, 0xBA9C7F, 0xBA9C7F, 0xBA9C7F, 0xBA9C7F, 0xBA9C7F, 0xBA9C7F, 0xB1967B, 0xB1957B, 0xB1957B, 0xB1957B, 0xB1957B, 0xB1957B, 0xB1957B, 0xB1967B, 0x9F7C54, 0x9F7C53, 0x9F7C53, 0x9F7C53, 0x9F7C53, 0x9F7C53, 0x9F7C53, 0x9F7C53, 0x9F7C54, 0x9F7C54, 0x9F7C54, 0x9F7C54, 0x9F7C54, 0x9F7C54, 0x9F7C54, 0x9F7C53, 0xB0957A, 0xB1957B, 0xB1957B, 0xB1957B, 0xB1957B, 0xB1957B, 0xB1957B, 0xB1957B, 0xB28E65, 0xB28E64, 0xB28E64, 0xB28E64, 0xB28E64, 0xB28E64, 0xB28E64, 0xB28E64, 0x8E6F4B, 0x8D6E4A, 0x8D6E4A, 0x8D6E4A, 0x8D6E4A, 0x8D6E4A, 0x8D6E4A, 0x8D6E4A, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0x9E7B53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB2977A, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB08B60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x8E6E4A, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0x9E7B53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB2977A, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB08B60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x8E6E4A, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0x9E7B53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB2977A, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB08B60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x8E6E4A, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0x9E7B53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB2977A, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB08B60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x8E6E4A, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0x9E7B53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB2977A, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB08B60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x8E6E4A, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0x9E7B53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB2977A, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB08B60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x8E6E4A, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xA3907B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0x9E7C53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB2977A, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB3987B, 0xB08B60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x8E6E4A, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0xB08B60, 0xB08B60, 0xB08B60, 0xB08B60, 0xB08B60, 0xB08B60, 0xB08B60, 0xB08B60, 0x9D5150, 0x9D5150, 0x9D5150, 0x9D5150, 0x9D5150, 0x9D5150, 0x9D5150, 0x9D5150, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9C504E, 0x9D5150, 0x9D5150, 0x9D5150, 0x9D5150, 0x9D5150, 0x9D5150, 0x9D5150, 0x9D5150, 0xAC8D6D, 0xAD906E, 0xAD906E, 0xAD906E, 0xAD906E, 0xAD906E, 0xAD906E, 0xAD906E, 0xAF895F, 0xAF895E, 0xAF895E, 0xAF895E, 0xAF895E, 0xAF895E, 0xAF895E, 0xAF895E, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9C4F4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0xAC8D6E, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9C4F4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0xAC8D6E, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9C4F4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0xAC8D6E, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9C4F4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0xAC8D6E, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9C4F4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0xAC8D6E, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9C4F4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0xAC8D6E, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0x9E9287, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x9C4F4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0x9C4E4E, 0xAC8D6E, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xB08A60, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0xB08A5F, 0x8D6F4C, 0x8D6F4C, 0x8D6F4C, 0x8D6F4C, 0x8D6F4C, 0x8D6F4C, 0x8D6F4C, 0x8D6F4C, 0xA68967, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAC8D6D, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0xAC8D6E, 0x9E7952, 0x9E7952, 0x9E7952, 0x9E7952, 0x9E7952, 0x9E7952, 0x9E7952, 0x9E7952, 0xB69578, 0xB79679, 0xB79679, 0xB79679, 0xB79679, 0xB79679, 0xB79679, 0xB79679, 0xB7987A, 0xB8997A, 0xB8997A, 0xB8997A, 0xB8997A, 0xB8997A, 0xB8997A, 0xB8997A, 0xA78A68, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0x9E7C53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB7987A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xA78A69, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0x9E7C53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB7987A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xA78A69, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0x9E7C53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB7987A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xA78A69, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0x9E7C53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB7987A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xA78A69, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0x9E7C53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB7987A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xA78A69, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0x9E7C53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB7987A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xA78A69, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0x8C6D49, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0xAD906F, 0x9E7C53, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0x9E7B52, 0xB7987A, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xB8997B, 0xA78A69, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968, 0xA68968

title1:
    .word 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x676767, 0xFFFFFF, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x676767, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x676767, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x676767, 0xFFFFFF, 0x676767, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x676767, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x676767, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x676767, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x676767, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x676767, 0x676767, 0x676767, 0x000000, 0x000000, 0x676767, 0x000000, 0x676767, 0x000000, 0x676767, 0x000000, 0x676767, 0x000000, 0x000000, 0x000000, 0x676767, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000

title2:
    .word 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x676767, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x676767, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x676767, 0x676767, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x676767, 0xFFFFFF, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x676767, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x676767, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x676767, 0xFFFFFF, 0xFFFFFF, 0x676767, 0x000000, 0x000000, 0x676767, 0x000000, 0x676767, 0x000000, 0x676767, 0x000000, 0x676767, 0x000000, 0x676767, 0x000000, 0x000000, 0x676767, 0x676767, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000

black_screen:
    .word 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000

brick_wall:
    .word 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0xA55324, 0xA55324, 0xA55324, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x5E2F15, 0x5E2F15, 0x5E2F15, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D, 0x3C1E0D

diff1:
    .word 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000

diff2:
    .word 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0xFF6700, 0xFF6700, 0xFF6700, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0xFF6700, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x3BFF00, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0xFF6700, 0xFF6700, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x3BFF00, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000

diff3:
    .word 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0xFF0000, 0xFF0000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0xFF6700, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0xFF0000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0xFF0000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0xFF6700, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000

diff4:
    .word 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0xFF0000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000

girik_art:
    .word 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x1E1F1F, 0x171818, 0x212121, 0x171818, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x1D1E1E, 0x161717, 0x161717, 0x222222, 0x202121, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x171818, 0x1F2020, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x191A1A, 0x161717, 0x161717, 0x202121, 0x212222, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x1F2020, 0x202121, 0x161717, 0x202121, 0x161717, 0x181919, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202020, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x1E1F1F, 0x1F2020, 0x1D1E1E, 0x161717, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x181919, 0x1C1D1D, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x171818, 0x222323, 0x222323, 0x161717, 0x222323, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x222323, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1B1C1C, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x171818, 0x161717, 0x212222, 0x202121, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x1D1E1E, 0x1B1C1C, 0x1C1D1D, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x181919, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x171818, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x181919, 0x161717, 0x202121, 0x181919, 0x191A1A, 0x161717, 0x202121, 0x212222, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x1C1D1D, 0x191A1A, 0x161717, 0x161717, 0x181919, 0x191A1A, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x202121, 0x161717, 0x161717, 0x171818, 0x1C1D1D, 0x1D1E1E, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202020, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x151515, 0x1D1C1D, 0x1A1918, 0x161717, 0x1C1D1D, 0x181919, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x181919, 0x161717, 0x161717, 0x202121, 0x212222, 0x161717, 0x171818, 0x171818, 0x212222, 0x161717, 0x161717, 0x222323, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x191A1A, 0x1C1D1D, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x151616, 0x2F2C2B, 0x373337, 0x4A4949, 0x535551, 0x43413D, 0x1F201E, 0x212222, 0x1E1F1F, 0x161717, 0x1C1D1D, 0x181818, 0x161717, 0x161717, 0x1B1C1C, 0x161717, 0x161717, 0x1E1F1F, 0x171818, 0x161717, 0x161717, 0x181919, 0x212222, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x1C1D1D, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x191917, 0x232423, 0x2A2C2B, 0x272928, 0x242424, 0x222422, 0x1D1F1B, 0x1C201D, 0x241F1E, 0x202121, 0x161717, 0x212222, 0x212222, 0x191A1A, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x1E1F1F, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x1D1D1D, 0x181919, 0x161717, 0x171818, 0x161717, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x272727, 0x232621, 0x1F211E, 0x181A1A, 0x171717, 0x181818, 0x1E1C1D, 0x191818, 0x1D1F1E, 0x1F1D1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x151616, 0x161717, 0x161717, 0x161717, 0x181919, 0x191A1A, 0x191A1A, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x88736E, 0x151616, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x222323, 0x222323, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x1E1F18, 0x222320, 0x1D211F, 0x171B19, 0x121614, 0x181818, 0x181818, 0x1F201F, 0x1F1F20, 0x191919, 0x26201A, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x222323, 0x222323, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x141515, 0xCBB9B6, 0x151616, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x181919, 0xB99893, 0xB4B5A9, 0x151616, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x171818, 0x161717, 0x161717, 0x171818, 0x212222, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x252722, 0x202021, 0x19191B, 0x161817, 0x111313, 0x181818, 0x202020, 0x272626, 0x2A2B26, 0x181A1A, 0x201E1A, 0x191A1A, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x181817, 0x777572, 0xB4A8A7, 0x534646, 0x181919, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x1E1F1F, 0x1C1D1D, 0x161717, 0xAE8F88, 0xA79A8E, 0x8B7B6A, 0x887568, 0x947E77, 0x756156, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x1B1C1C, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x262724, 0x1C1A1B, 0x161417, 0x1F1F1F, 0x242220, 0x382E2C, 0x726161, 0x362520, 0x251B19, 0x161815, 0x24201F, 0x1B1B19, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x181919, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0xA58C83, 0x968175, 0xB09F94, 0x6B5F59, 0x181919, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x151616, 0xA08477, 0xAD8D7D, 0x947269, 0x80675A, 0x32322C, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x161717, 0x161717, 0x171818, 0x2A2821, 0x1B1918, 0x1F1D20, 0x21181B, 0x7A605A, 0x9B7D75, 0x7E6156, 0x92786F, 0x554745, 0x2E2825, 0x534C49, 0x513F38, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x272420, 0xA48372, 0xA48F83, 0xB49F99, 0x1F2020, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x22201D, 0x7E6E5E, 0xA68C7C, 0xB29488, 0xAF9187, 0xAD9286, 0x494642, 0x181919, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x181919, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x211F19, 0x201B1B, 0x2B2726, 0x392722, 0x8D7066, 0x9E817D, 0x98837F, 0x5A5355, 0xAFA8A4, 0x625855, 0x34211E, 0x83675B, 0x161717, 0x181919, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x181919, 0x1D1E1E, 0x222323, 0x222323, 0x202121, 0x1A1A1A, 0x3B372F, 0x171717, 0xA38375, 0xA08274, 0x9D8073, 0x1B1B1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x30302F, 0x8A7966, 0x9A7C6B, 0xB29485, 0x907164, 0x896B5C, 0x887B73, 0x161717, 0x181919, 0x1A1B1B, 0x161717, 0x161717, 0x171818, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x212222, 0x181715, 0x261E1D, 0x56413D, 0x7F6158, 0x8E7269, 0x64504B, 0x756563, 0x716562, 0x65534B, 0x7E6D62, 0x7E695F, 0x887561, 0x161717, 0x1C1D1D, 0x161717, 0x181919, 0x1B1C1C, 0x1F2020, 0x212222, 0x1F2020, 0x1D1E1E, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x33302D, 0xB7A08E, 0xB89E8D, 0xB49687, 0xB08E7D, 0xA08071, 0x685A54, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x1F2020, 0x79736B, 0x836F5F, 0x876A5B, 0xB6998D, 0xB19386, 0x9C7E70, 0x9E7F71, 0xA08880, 0x161717, 0x161717, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x202121, 0x212222, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x2A2921, 0x352D26, 0x2F2622, 0x3B3732, 0x312723, 0x745B57, 0x6F514F, 0x887063, 0x8C6F64, 0x8C7164, 0x776B55, 0x1B1C1C, 0x181919, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x252524, 0x896E60, 0x8C695D, 0xAB8B7D, 0xA98978, 0xA68879, 0x9A7769, 0x363433, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x2E2C27, 0x7D665A, 0x725748, 0x9B7F6F, 0x9C7F71, 0x846759, 0x907766, 0xA08B7D, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x202525, 0x38362E, 0x40342D, 0x594C47, 0x695248, 0x664D40, 0x574335, 0x8F7466, 0xB49685, 0x8B6F5F, 0x48483D, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202020, 0x171818, 0x292624, 0x9F8877, 0xA98E7F, 0xAE8F80, 0xA58574, 0xA48473, 0xA58573, 0x90796B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x151615, 0x735C4C, 0x775D4E, 0x7C6252, 0x7C6252, 0x8B7967, 0x8A7667, 0x141515, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x181919, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x1D1E1E, 0x161717, 0x161717, 0x141515, 0x474F3D, 0x50493C, 0x56443A, 0x6F5247, 0xAC8C7E, 0xA98979, 0x8D7062, 0x725442, 0x836554, 0x746F6B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x181919, 0x191A1A, 0x202121, 0x76655C, 0x9E8172, 0x8F7061, 0xA08071, 0xA28470, 0x9D7C6D, 0x181818, 0x161717, 0x161717, 0x171818, 0x161717, 0x1D1E1E, 0x1B1C1C, 0x1B1C1C, 0x544938, 0x846E5F, 0x9F8979, 0xA38E7C, 0x9A8374, 0x9B897A, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x181919, 0x161717, 0x161717, 0x181919, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x151616, 0x334434, 0x5F594D, 0x9A7871, 0x77594F, 0x7F6156, 0x9E8278, 0x8A6965, 0x7E6054, 0x826455, 0x7A6E56, 0x626649, 0x85988A, 0x6B7D7E, 0x171A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x222323, 0x161717, 0x171818, 0x1E1F1F, 0x1E1E1D, 0x826E5B, 0x967A6C, 0x947969, 0x9D8073, 0x2C2624, 0x161717, 0x161717, 0x171818, 0x161717, 0x1F2020, 0x171818, 0x1F2020, 0x161717, 0x6C5F4D, 0xA48B78, 0xAD9583, 0xAF9386, 0xA48B7E, 0x968575, 0x887A70, 0x252322, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x1D1E1E, 0x1D1E1E, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x324D47, 0x33735C, 0x24503E, 0x3C4A3A, 0x795F53, 0x6C5C4A, 0x695246, 0xA38481, 0xA07977, 0xA38279, 0x7C6255, 0x616047, 0x466848, 0x5D8874, 0x5A8C83, 0x599185, 0x43836F, 0x44665E, 0x151616, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1C1C, 0x191A1A, 0x1D1E1E, 0x171818, 0x171818, 0x161717, 0x3E535C, 0x655D57, 0x7D685E, 0x5A443D, 0x5E5C5F, 0x161717, 0x171818, 0x161717, 0x1C1D1D, 0x1B1C1C, 0x161717, 0x161717, 0x171818, 0x161717, 0x65544B, 0x977C6C, 0xAB9180, 0xAF9887, 0xA69283, 0x8E7B6B, 0x937D6F, 0x504741, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1B1C1C, 0x22312A, 0x58B496, 0x52A889, 0x35745C, 0x204234, 0x47493D, 0x745C53, 0x583C31, 0x7F5A55, 0x82635A, 0xA08375, 0x685443, 0x63564B, 0x427966, 0x408767, 0x408867, 0x367B5A, 0x3A8262, 0x439371, 0x488D77, 0x222D2C, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x1C1D1D, 0x161717, 0x1A1B1B, 0x222222, 0x51514F, 0x3D5767, 0x39525E, 0x695A50, 0x241D1C, 0x33353A, 0x1F2020, 0x171818, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x212222, 0x161717, 0x141515, 0x564A45, 0x947B6B, 0xAA9381, 0xAA978C, 0xA89285, 0xA08978, 0x977E6E, 0x3A3735, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x2E473C, 0x62A98D, 0x64C9A5, 0x81EFCF, 0x60C6A1, 0x398164, 0x2E6850, 0x204738, 0x2B3529, 0x534A42, 0x896962, 0x95746A, 0x675443, 0x7B6556, 0x5A6051, 0x3D8368, 0x387C5E, 0x2F6D51, 0x337455, 0x387F5F, 0x489879, 0x347859, 0x45866D, 0x151C18, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x1C1D1C, 0x84796D, 0x53575A, 0x346083, 0x435C75, 0x304A5D, 0x242E32, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x1C1C1C, 0x161717, 0x181919, 0x161717, 0x161717, 0x161717, 0x665749, 0x837060, 0x9D8B80, 0xAC9487, 0xAC9382, 0x9A8270, 0x927B6B, 0x8E7A70, 0x695E56, 0x494240, 0x57544E, 0x557464, 0x45836E, 0x499C77, 0x499F79, 0x4CA580, 0x66D1A9, 0x6CD6B3, 0x54AE90, 0x33725C, 0x3D8669, 0x326F5A, 0x265742, 0x24503C, 0x2B4433, 0x314232, 0x5F695A, 0x456851, 0x3B7E5B, 0x3D8666, 0x3E8564, 0x3D8062, 0x306D4F, 0x3B8363, 0x3F8969, 0x3E8766, 0x47977A, 0x53B08A, 0x4C8668, 0x2E433B, 0x19231F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x9D8A7A, 0x907764, 0x7F6C61, 0x28455C, 0x1B3E62, 0x2A4253, 0x1E1F1F, 0x212222, 0x212222, 0x161717, 0x1F2020, 0x161717, 0x202121, 0x161717, 0x161717, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x615749, 0x95786D, 0xA5857C, 0xAB8F82, 0xA99080, 0xA48879, 0xA5897A, 0xAC9181, 0xB19486, 0xB59B8B, 0xAAA395, 0x479374, 0x47987C, 0x469B77, 0x439472, 0x408B6D, 0x35775D, 0x2D6650, 0x489679, 0x489A7E, 0x499B7E, 0x489581, 0x46937B, 0x428B77, 0x468F77, 0x448D74, 0x428B74, 0x3E846C, 0x36795E, 0x398164, 0x3B8365, 0x387D5E, 0x3A8262, 0x377B5D, 0x2C674F, 0x387C60, 0x41906B, 0x3F8C68, 0x3E8867, 0x449171, 0x4D7C61, 0x53514C, 0x393531, 0x4B453F, 0x957D70, 0x927662, 0x896E5B, 0x7D6958, 0x68594B, 0x515247, 0x4D4C43, 0x161717, 0x161717, 0x171818, 0x171818, 0x1B1C1C, 0x161717, 0x202121, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x151616, 0x614E40, 0x896D5E, 0x9F8174, 0xB09282, 0xAC9081, 0xAC8E7F, 0xAF9181, 0xB49585, 0xB19784, 0xB29E8F, 0x438066, 0x43907B, 0x3F8D6A, 0x3F8B6A, 0x34755A, 0x3F816A, 0x326E58, 0x469578, 0x459574, 0x489C7C, 0x3A8369, 0x35795F, 0x306D59, 0x316F59, 0x316B58, 0x2C6051, 0x29574C, 0x2E6350, 0x3C7B64, 0x448B73, 0x3E886D, 0x3C8467, 0x397D60, 0x2C654B, 0x35775B, 0x3A8263, 0x428F6D, 0x3B7E62, 0x3A7D5E, 0x908876, 0x977B67, 0x8F745E, 0x7F6B56, 0xA48975, 0x896E5B, 0x846957, 0x7D6251, 0x796253, 0x635745, 0x171717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x171818, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x151616, 0x413C34, 0x796052, 0x96796B, 0xA48978, 0xA98D7E, 0xA98C7D, 0xAA8E7C, 0xA98D7D, 0xAA9583, 0x426E57, 0x408B74, 0x3C8766, 0x3E8B6A, 0x387F63, 0x306F57, 0x2E644F, 0x1E4A3B, 0x1F4D3A, 0x306953, 0x387060, 0x386B5A, 0x2A5849, 0x1A3D33, 0x396657, 0x1F3F34, 0x1A3028, 0x34554B, 0x1C3935, 0x2A5E4C, 0x37735F, 0x428B6E, 0x397E60, 0x2B6349, 0x34735A, 0x2F6C53, 0x357758, 0x36785B, 0x377153, 0x977C71, 0x967769, 0x977465, 0x826958, 0x9D8270, 0x846957, 0x7E6351, 0x796050, 0x79665B, 0x262625, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x4D3F35, 0x70594D, 0x755B50, 0x7C6053, 0x886B5D, 0x937769, 0x8E786A, 0x3D5C4A, 0x418D73, 0x3C8669, 0x449775, 0x34765D, 0x295F47, 0x275C46, 0x316E56, 0x3A8063, 0x285A49, 0x112E28, 0x294841, 0x2A574B, 0x51524D, 0x655A5B, 0x5E4C52, 0x383138, 0x0F2123, 0x253F3D, 0x1A4335, 0x3E7F64, 0x204F3C, 0x36725C, 0x2C644B, 0x327354, 0x2E6951, 0x337256, 0x33715A, 0x386852, 0x897165, 0x8A6E61, 0x8A6E5F, 0x866A5B, 0x856B5A, 0x725B46, 0x705544, 0x665345, 0x38342E, 0x181919, 0x181919, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x1B1A17, 0x433931, 0x424034, 0x28503D, 0x40896D, 0x459573, 0x448D6C, 0x2A5C45, 0x316E56, 0x337258, 0x2F6B54, 0x2D6851, 0x2E6C54, 0x3D816A, 0x41816A, 0x5C867B, 0x863B48, 0x752D3E, 0x7F6469, 0x361925, 0x718183, 0x336555, 0x123027, 0x2B5348, 0x37775F, 0x2E6A51, 0x1C4435, 0x326E53, 0x2F6A52, 0x2E684E, 0x2F6955, 0x34614D, 0x746254, 0x766052, 0x765F50, 0x776052, 0x705B49, 0x655141, 0x5E4D40, 0x2D2C28, 0x161717, 0x161717, 0x1D1E1E, 0x212222, 0x212222, 0x1B1C1C, 0x161717, 0x161717, 0x222323, 0x1A1B1B, 0x161717, 0x161717, 0x1D1E1E, 0x222323, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x305B44, 0x32634E, 0x336448, 0x62745F, 0x496553, 0x265B45, 0x34725C, 0x367A5E, 0x3C8565, 0x408B6C, 0x3F886C, 0x557F76, 0x91A7AF, 0x605660, 0x756E6E, 0x96A096, 0xB1AB9F, 0x6D8489, 0x75B4A6, 0x20483A, 0x2F6151, 0x307056, 0x398162, 0x306A54, 0x1A4232, 0x2B6248, 0x2C5C46, 0x2B543E, 0x22382B, 0x39342B, 0x1C1A17, 0x211E1C, 0x201C17, 0x201C1A, 0x141515, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x2E2C28, 0x56433C, 0x766F6A, 0x2B2A2A, 0x141515, 0x161717, 0x151616, 0x605B50, 0xD6CDBF, 0x41624F, 0x337558, 0x2F6C56, 0x2E6A53, 0x2C6852, 0x306F53, 0x337657, 0x3E846E, 0x498074, 0x2B463E, 0xD2E0F2, 0xD4DFDE, 0xD3D7BE, 0x9CB8B7, 0x73AC9F, 0x34745E, 0x3C8367, 0x408B6C, 0x3B8463, 0x2F6A51, 0x3A5149, 0x161A18, 0x141515, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x1F2020, 0x1E1F1F, 0x202121, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x171818, 0x161717, 0x161717, 0x161717, 0x1F1E1E, 0x827268, 0xA0847D, 0xA0857B, 0x89736B, 0xC3C0B6, 0x66655E, 0x161717, 0x1D1E1E, 0x737064, 0x456250, 0x316B55, 0x3D8568, 0x3C8767, 0x3D8A68, 0x408E6D, 0x459674, 0x3E816F, 0x5B887C, 0x3B4F40, 0xD1DCE5, 0x9DA386, 0xDEE1C0, 0x82949D, 0x4C8B7C, 0x408C6B, 0x408D6A, 0x327354, 0x2B6348, 0x316B4F, 0x354F3E, 0x1E1F1F, 0x212222, 0x212222, 0x161717, 0x161717, 0x171818, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x1E1F1F, 0x161717, 0x161717, 0x736560, 0x917A6B, 0x987A6D, 0xA8897A, 0xAE8E80, 0xA78C80, 0xCEC8C0, 0x5D5E5B, 0x161717, 0x161717, 0x46735A, 0x3C8465, 0x295F4A, 0x3A7F62, 0x439472, 0x439471, 0x449675, 0x92D1C3, 0x528076, 0x465248, 0xA2A577, 0xB5B583, 0x838A6A, 0x447469, 0xA0D4CF, 0x3E7D6B, 0x3E8B69, 0x3A8464, 0x387F5F, 0x326C50, 0x1D1E1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x161717, 0x212222, 0x181919, 0x171818, 0x171818, 0x212222, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x212222, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x191A1A, 0x161717, 0x88726C, 0x806459, 0x987769, 0xA98A7B, 0xB09383, 0xAB8E7F, 0x8E8276, 0xCBC9BE, 0x252625, 0x161717, 0x3B684F, 0x42906E, 0x408D69, 0x327357, 0x397F62, 0x42906F, 0x3E8B6B, 0x3C836A, 0x3A7665, 0x264037, 0xA1A56D, 0xBFC085, 0xE4E9DE, 0xCDE3EB, 0x468D7A, 0x46957B, 0x479E78, 0x469B78, 0x418F6E, 0x437960, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x181919, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x161717, 0x866D67, 0x866A60, 0x98796B, 0xAE8F80, 0xB59886, 0xB09481, 0x9C8779, 0xD1C6C2, 0xD0C9CC, 0x242524, 0x346348, 0x3A8063, 0x469A76, 0x479B75, 0x3C8666, 0x398262, 0x439572, 0x459976, 0x449675, 0x467F74, 0x699589, 0x7BAB9C, 0x2D473E, 0x448D72, 0x479D7A, 0x489E7B, 0x4BA47E, 0x4AA17D, 0x47997A, 0x234031, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x171818, 0x202020, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1B1C1C, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x4B3B37, 0x7C6257, 0x977A6A, 0xAA8B7C, 0xB49987, 0xB29786, 0xA78D7D, 0xB0A19B, 0xD0CBCC, 0xCAC8C6, 0x4B7A65, 0x377D5E, 0x469877, 0x489F7A, 0x489C79, 0x429170, 0x489A7B, 0x459677, 0x459777, 0x8EBDBF, 0x699EA1, 0x468580, 0xA7CAD2, 0x429377, 0x499F7E, 0x479E7A, 0x489D77, 0x429170, 0x3B8468, 0x294034, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x1B1C1C, 0x161717, 0x2A2825, 0x232121, 0x151616, 0x1B1C1C, 0x161717, 0x161717, 0x222323, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1B1B, 0x7A6458, 0x9A7D6F, 0xA88A7B, 0xB39889, 0xB69C8C, 0xB19685, 0x9F887F, 0xCDC5C0, 0xC9C2C3, 0xC0CECC, 0x3C8066, 0x499D7B, 0x459774, 0x469A77, 0x3E886A, 0x317157, 0x327356, 0x40896C, 0x9ED5CE, 0xA2C2CC, 0xB3D8DF, 0xC7E8EE, 0x459778, 0x479D7D, 0x499F7E, 0x42906E, 0x398163, 0x479375, 0x1B1F1C, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x625B57, 0xA19182, 0xA8917C, 0xA38475, 0xA18E7D, 0x2C2926, 0x161717, 0x161717, 0x212222, 0x222323, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x181919, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x352F2C, 0x917565, 0xA28979, 0xB29888, 0xB49A8C, 0xB19787, 0xAA8E7F, 0xAA958B, 0xCBC4BD, 0xCAC7C5, 0xB5C1BD, 0x468D72, 0x3C8866, 0x439270, 0x42916E, 0x439372, 0x419071, 0x40906F, 0x3A8266, 0x3F8C6E, 0x429076, 0x439076, 0x449775, 0x449674, 0x429370, 0x449572, 0x469A77, 0x477761, 0x151616, 0x1E1F1F, 0x161717, 0x161717, 0x151516, 0xC7C3B9, 0x7B7368, 0xA38D80, 0xA8917E, 0xAC907E, 0xAA8B7C, 0xA68A82, 0x9B8075, 0x141515, 0x161717, 0x1C1C1C, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x151616, 0x836B60, 0xA08677, 0xAF9487, 0xB2988D, 0xB3978A, 0xAD9382, 0xA89180, 0xACA196, 0xAEA8A4, 0xC4B5B9, 0x8A9A99, 0x35745C, 0x35785C, 0x3E8768, 0x449473, 0x429372, 0x449673, 0x449674, 0x439471, 0x439473, 0x449675, 0x449574, 0x3F8D6B, 0x3C8766, 0x3D8868, 0x418F6C, 0x2D4432, 0x161717, 0x181919, 0x161717, 0x91908B, 0xC6C6BE, 0xA0998D, 0x817265, 0xA9937F, 0xB39884, 0xAD907F, 0xAE8E7D, 0xA3837B, 0x93766F, 0x282423, 0x161717, 0x1D1E1E, 0x212222, 0x171818, 0x161717, 0x1A1B1B, 0x1D1E1E, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x6C544D, 0x9D8076, 0xA98D83, 0xB1958B, 0xB09787, 0xB39788, 0xAF9785, 0xA69283, 0xBAB1A7, 0xB6B3B4, 0xA19D9E, 0x709288, 0x4A9A7B, 0x439173, 0x439272, 0x469776, 0x408E6D, 0x459675, 0x439472, 0x439573, 0x3C8867, 0x3B8665, 0x418F6E, 0x3A8465, 0x3A8263, 0x448C6A, 0x1C1E1C, 0x212222, 0x1A1B1B, 0xBCB8AF, 0xC4C4BD, 0xC7C2BC, 0x5B4C43, 0x9E8C7C, 0xB9A08D, 0xBF9F8E, 0xB69787, 0xB89884, 0xA2847A, 0x7C665E, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F1C1B, 0x886D64, 0x9C8275, 0xAA8F82, 0xB19687, 0xAF9485, 0xB19687, 0xB1988A, 0x9D8A7C, 0xBDB5B2, 0xBFBBBC, 0xB1ACAE, 0x3B6B58, 0x2D684F, 0x3B8163, 0x408D6C, 0x429071, 0x3F8D6C, 0x408D6C, 0x408E6D, 0x42916F, 0x3E8B69, 0x3A8562, 0x42906F, 0x3C8265, 0x4E796C, 0xB8B7B1, 0xB8B5B1, 0xD5D4D0, 0xC5C2BD, 0xCBC4B9, 0x897E72, 0xB39E8E, 0xC1A697, 0xC4A99A, 0xC4A496, 0xB69585, 0xB08E7E, 0x83706B, 0x151616, 0x161717, 0x181919, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x6C574F, 0x93796C, 0xA38777, 0xAB9181, 0xB29687, 0xAE9483, 0xB09787, 0xA89083, 0xAEA39B, 0xBCB9B9, 0xBEB9BB, 0xB1B8B7, 0x49675D, 0x255041, 0x295E49, 0x33735B, 0x3E886A, 0x408C6D, 0x3D896A, 0x3B8563, 0x3E8867, 0x3F8868, 0x336B54, 0x94AFA4, 0xADB4AD, 0xADABA6, 0xB5AFAB, 0xB7B3AA, 0xB3ACA0, 0xA09482, 0xA79783, 0xB49C8C, 0xBDA090, 0xBA9D8F, 0xBB9F91, 0xA78A80, 0x8D807D, 0x161717, 0x161717, 0x191A1A, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x222222, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x181818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x1B1B1A, 0x826C5F, 0x997C6E, 0xA98D83, 0xB39589, 0xB09483, 0xAE9585, 0xAE968A, 0x98877D, 0xBCB8B3, 0xB8B2B4, 0xC1B7BA, 0xBCB2B6, 0x99A9A5, 0x3D6357, 0x2F6852, 0x397B65, 0x3E866D, 0x3E886E, 0x3E886B, 0x36775D, 0x568476, 0xAEBAB2, 0xBCB6B2, 0xA7A49E, 0xB3B0AA, 0xD1CDC4, 0xABA196, 0xA39686, 0xAB9885, 0xB19987, 0xBBA090, 0xBD9F91, 0xB49386, 0xB59485, 0x897F7E, 0x1E1F1F, 0x212222, 0x1F2020, 0x171818, 0x202121, 0x202121, 0x202121, 0x1B1C1C, 0x1D1E1E, 0x181919, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x181919, 0x161717, 0x161717, 0x6C5952, 0x8B6E67, 0xA78980, 0xAE9288, 0xB3978A, 0xB19589, 0xB2978C, 0xAE9688, 0xB4A79C, 0xB8B5AF, 0xB7B0AC, 0xB7B4AD, 0xB2AFAC, 0x918A8E, 0x999A9C, 0x91A39C, 0x56766C, 0x3D5F54, 0x2A483C, 0xA5B3AA, 0xA69E9B, 0xB2AFAA, 0xA8A69D, 0xB5B2AD, 0xB9B1A9, 0xAB9E93, 0xA89483, 0xA8937F, 0xAC9480, 0xBDA190, 0xC7AC9D, 0xC8ADA0, 0xB69B93, 0x5E5B5B, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x6E6161, 0x745851, 0xA08479, 0xA58F85, 0xB4998B, 0xB19589, 0xB09488, 0xB09689, 0x9A887A, 0xB8AEA7, 0xB3B0AB, 0xB6B3AE, 0xABA6A2, 0xC1B9BA, 0x85807F, 0xB5AFAF, 0xA4A19E, 0x9C9996, 0x9D9A96, 0xA7A29F, 0xB0ACA7, 0xAAA49D, 0xAEAAA3, 0xADADA7, 0x978C80, 0xA89687, 0xAB9584, 0xAD9480, 0xAC937F, 0xAE8F80, 0xC3A394, 0xBEA8A4, 0x353436, 0x181919, 0x212222, 0x171818, 0x161717, 0x161717, 0x191A1A, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x171818, 0x161717, 0x161717, 0x161717, 0x171818, 0x181919, 0x635D5F, 0xA2918C, 0x7C615A, 0xA78B7E, 0xB1958B, 0xB3978A, 0xB29689, 0xB19889, 0xB0948A, 0x96837B, 0xB7ACA9, 0xB7ACA9, 0x8E8782, 0xBBB3B1, 0xADA9A4, 0xABA6A3, 0xA09C9B, 0x6B6664, 0xA59E9A, 0xA29B96, 0xA59E99, 0xAEA7A3, 0xB2ABA5, 0x9C8D80, 0xAE9C8A, 0xB29B89, 0xB59988, 0xB59C8A, 0xAE9283, 0xA0897D, 0x716A6B, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x1B1C1C, 0x181818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161719, 0x554B49, 0x725B52, 0xA08276, 0xAD9288, 0xB4988B, 0xB39988, 0xAE9384, 0xAF9587, 0x9F887D, 0x6B5E5A, 0xA69692, 0xA0918F, 0xAE9D9C, 0xA89293, 0xA49892, 0xB3A5A1, 0xB2A4A1, 0x8C7E7B, 0xAAA19B, 0xA8A09E, 0xADA59E, 0xA3968A, 0xB09B88, 0xBCA290, 0xCBAE9F, 0xD5B8AA, 0xD9BCAA, 0xB3A29D, 0x3B3A3D, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x222222, 0x766A5F, 0x83675F, 0xAA8E81, 0xB2968C, 0xB49A8D, 0xB19789, 0xB1978A, 0xA68C80, 0xB1A59F, 0x908881, 0x6D6360, 0x7A6F6B, 0x9B8F8C, 0xA38C87, 0xDAB9AE, 0xEFD1CC, 0x7A6762, 0x776B63, 0x8C7C76, 0x918077, 0xAB9789, 0xB89F8D, 0xC6A898, 0xD4B6A8, 0xD0B3A8, 0xC3B7B4, 0x151616, 0x181919, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x1B1C1C, 0x585958, 0x7E6D62, 0x907569, 0xAA8F82, 0xB0968B, 0xB2968C, 0xB1978C, 0xA78B80, 0x957772, 0x96817C, 0xA28E8A, 0x7B6C69, 0x70635F, 0x8F7569, 0xB28677, 0xC3A299, 0x837065, 0x9B887E, 0xA28D83, 0xA69086, 0xAF9386, 0xB69B8E, 0xBCA093, 0xBBA8A3, 0xB0AFB8, 0x161717, 0x1C1D1D, 0x171818, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x212121, 0x161717, 0x4B4847, 0x705E4E, 0x997C70, 0xB0948A, 0xB59B90, 0xB29A8C, 0xA89182, 0x958174, 0x7D726B, 0x938480, 0x907D7C, 0x98847F, 0xB3978A, 0x846050, 0xEBCAC0, 0xA28C80, 0x907A6D, 0x9B8473, 0xA88C80, 0xAA8D7F, 0xAE968F, 0xA69FA2, 0xBFCCD9, 0xA4B3CA, 0x62666F, 0x1B1C1C, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x212222, 0x1B1C1C, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x404041, 0x78655A, 0xA8867A, 0xB09488, 0xAC9086, 0xB0968B, 0x9A8476, 0xA4968E, 0xA39B98, 0x6B645F, 0x6B5950, 0x997B6D, 0xBE9F91, 0xB69387, 0xB1938A, 0x927969, 0x8F7869, 0x96776B, 0x999192, 0xBDCBDB, 0xBDCEE1, 0xA0ADC2, 0x9FA8B1, 0x202121, 0x161717, 0x161717, 0x1B1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x202121, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x171818, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x262727, 0x7F645E, 0x997C74, 0x9F8177, 0xA48A7E, 0xA18B7A, 0x9A887C, 0x96847F, 0x918480, 0x847368, 0x997D72, 0xA07F6F, 0xBE9D8F, 0xD5B5AA, 0x8E766D, 0x7B6F66, 0xB5BCC7, 0xBBC9E0, 0x6D7681, 0xABB5BF, 0x606368, 0x222321, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x222323, 0x1E1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x222323, 0x171818, 0x161717, 0x161717, 0x161717, 0x181919, 0x161717, 0x161717, 0x171818, 0x161717, 0x181919, 0x191A1A, 0x161717, 0x161717, 0x181919, 0x191919, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x565152, 0xCFAA9E, 0xCAACA1, 0xCBB0A9, 0x998176, 0x8B7B68, 0x8E7768, 0x7C6B64, 0x6E6760, 0xB6A495, 0xB49E91, 0x927363, 0xC5A598, 0xD5B8AC, 0x9E8C8A, 0xA3AEB8, 0x2D2F32, 0x828797, 0x8E9FB0, 0x484E52, 0x2A2929, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x181818, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x171818, 0x212222, 0x212222, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x766B67, 0xA49698, 0x9A9096, 0xC39E9D, 0xD2A290, 0xC8A69F, 0xA6958D, 0x97877E, 0x80716B, 0x776964, 0xA1867C, 0xA29488, 0x7D6C68, 0x9B8E93, 0xB1B1C2, 0xB8C6DA, 0x575663, 0xADB9C4, 0x464F53, 0x171717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x181919, 0x161717, 0x1E1F1F, 0x1E1F1F, 0x161717, 0x1B1C1C, 0x1D1E1E, 0x171818, 0x161717, 0x161717, 0x161717, 0x1B1C1C, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x1D1E1F, 0xC1A79C, 0x927A6E, 0x9C9EA6, 0x928E97, 0x9B8183, 0xB0B0BB, 0xB4C2D8, 0xB6C2DA, 0xC5CEE2, 0xC6CBDB, 0xB7AEBA, 0x918B94, 0x928F98, 0x9AA3B4, 0xA2B1C5, 0x98A5B7, 0xBCC5D5, 0x1F1F1F, 0x212222, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x202121, 0x212222, 0x1C1D1D, 0x171818, 0x212222, 0x161717, 0x1F2020, 0x1D1E1E, 0x161717, 0x161717, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x212121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x151616, 0x9494A0, 0x939BAE, 0xA4A2AB, 0xA39A9F, 0xABAAB0, 0xACB0BF, 0xB3B5C4, 0xACB3C3, 0xB3BECD, 0xB4C4D5, 0xB8C6DD, 0x90A0BE, 0x9DABC6, 0x7F8FA5, 0x9C9EB6, 0xC5CCD5, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x1B1C1C, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0xB2A3A7, 0xABAEBB, 0xB4C6DF, 0xA3B7D1, 0xA6B3C4, 0x9698AC, 0xABB3C3, 0xACB5CE, 0xB5BDCB, 0x8C888E, 0x494755, 0x787A89, 0x6F7178, 0x80878F, 0x1F1F21, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x1F2020, 0x1B1C1C, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x705B51, 0x94716B, 0x8E7C78, 0xA7A5A3, 0x969093, 0x7E7679, 0x7E7B78, 0x8D888B, 0x86848A, 0x8C9198, 0x84929B, 0x6A6265, 0x151616, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1C1D1D, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x222323, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1B1C1C, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x7C6354, 0x9D7364, 0x997863, 0x9D8576, 0xAC9C8F, 0xAEA093, 0xA69997, 0x9C9CA6, 0x8C96AB, 0xB6B3BC, 0xC6AFA9, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x171818, 0x1E1F1F, 0x181919, 0x1C1D1D, 0x161717, 0x161717, 0x2F2520, 0x685242, 0x867164, 0x93817E, 0x92909C, 0x969DB7, 0xB2B2BF, 0xB69C98, 0xB78F80, 0xC39C90, 0x151616, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x222323, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x161717, 0x484037, 0x594D48, 0x6A5953, 0x9A766A, 0xA0766A, 0xA2776B, 0xB18173, 0x8A6A5C, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1F2020, 0x161717, 0x161717, 0x161717, 0x1B1C1C, 0x1E1F1F, 0x1A1B1B, 0x1E1F1F, 0x212222, 0x1D1E1E, 0x161717, 0x161717, 0x181919, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x171818, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x181919, 0x191A1A, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x202121, 0x212222, 0x222323, 0x1E1F1F, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x191A1A, 0x171818, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1B1C1C, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x222323, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212121, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x202121, 0x222323, 0x212222, 0x1B1C1C, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x1B1C1C, 0x161717, 0x161717, 0x171818, 0x1A1B1B, 0x161717, 0x161717, 0x161717, 0x161717, 0x1D1E1E, 0x171818, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x171818, 0x1E1F1F, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x212222, 0x202121, 0x1A1B1B, 0x1A1B1B, 0x202121, 0x212222, 0x1E1F1F, 0x212222, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717, 0x161717

jackie_art:
    .word 0x150F0F, 0x150D0F, 0x170F0F, 0x160F0E, 0x15100E, 0x170F0E, 0x160F0E, 0x16100E, 0x170F0D, 0x160F0E, 0x160F0D, 0x16100E, 0x160F0E, 0x160F0E, 0x150E0D, 0x150F0E, 0x150E0F, 0x150F0E, 0x160F0E, 0x16100D, 0x160F0E, 0x150F0D, 0x160F0F, 0x16100E, 0x160F0E, 0x16100C, 0x160F0E, 0x15100E, 0x160E0D, 0x160F0E, 0x160F0D, 0x170F0D, 0x160F0E, 0x150F0F, 0x160F0E, 0x160F0E, 0x150F0D, 0x160F0D, 0x17100E, 0x160F0E, 0x150F0D, 0x15100D, 0x150E0D, 0x16100E, 0x160E0D, 0x16100D, 0x5F1D1B, 0x601D1C, 0x5E1E1B, 0x5F1E1D, 0xD67A23, 0xD87B22, 0xDA7B22, 0x5F1B1A, 0x601B1A, 0xAC3624, 0xAC3724, 0xAC3824, 0xAC3725, 0xAC3824, 0xE35F25, 0xE25F25, 0x4A2019, 0x492017, 0x160F0E, 0x16100E, 0x15100E, 0x16100E, 0x15100E, 0x15100D, 0x15100E, 0x14100D, 0x16100E, 0x17100E, 0x160E0E, 0x160F0E, 0x15100E, 0x160F0E, 0x16100D, 0x170F0E, 0x170F0F, 0x17100E, 0x160F0E, 0x16100E, 0x16100E, 0x16110E, 0x15100D, 0x16100E, 0x160F0D, 0x150F0E, 0x160F0E, 0x150F0E, 0x150F0E, 0x16100D, 0x170F0D, 0x16100D, 0x16110E, 0x160E0E, 0x160F0F, 0x160F0E, 0x170F0E, 0x160F0D, 0x160F0E, 0x15100D, 0x16100D, 0x170F0F, 0x16100E, 0x160F0D, 0x150E0E, 0x160E0D, 0x5F1F1B, 0x601F1D, 0x5F1E19, 0x5E1F1C, 0xD97A26, 0xD97B23, 0xDA7A22, 0x601B1B, 0x5E1C1A, 0xAC3724, 0xAA3624, 0xAC3724, 0xAB3825, 0xAC3825, 0xE15E24, 0xE25E25, 0x4A2118, 0x4A2119, 0x16100D, 0x150F0E, 0x160F0E, 0x18100E, 0x160F0F, 0x16100E, 0x16100E, 0x170F0F, 0x160F0D, 0x16100E, 0x16100D, 0x16100E, 0x16100F, 0x160F0F, 0x16100E, 0x17100E, 0x16100E, 0x160F0E, 0x170F0D, 0x160F0D, 0x160F0E, 0x16100E, 0x160F0E, 0x160F0F, 0x170F0E, 0x161110, 0x16100D, 0x16110E, 0x160F0E, 0x17100F, 0x160F0E, 0x160F0D, 0x160F0E, 0x150F0E, 0x16100D, 0x15100E, 0x160F0D, 0x160F0D, 0x160F0D, 0x15100D, 0x160F0F, 0x16100D, 0x16100E, 0x150F0E, 0x150F0E, 0x160F0E, 0x5F1E1B, 0x5E1E1C, 0x5F1F1C, 0x5E1E1D, 0xD87B23, 0xDA7B23, 0xD97925, 0x5F1B1B, 0x601B18, 0xAC3724, 0xAC3724, 0xAE3725, 0xAC3824, 0xAA3725, 0xE35F26, 0xE15E24, 0x4A2119, 0x4A2119, 0x160F0C, 0x16100E, 0x160F0E, 0x16100E, 0x160F0E, 0x160F0F, 0x170F0F, 0x160F0D, 0x160F0E, 0x170F0E, 0x17100F, 0x170F0E, 0x170F0D, 0x16100E, 0x17100F, 0x160F0E, 0x170F0E, 0x16100E, 0x16100E, 0x16100D, 0x170F0E, 0x160F0D, 0x17100E, 0x16100E, 0x150F0E, 0x16100F, 0x160F0D, 0x160F0E, 0x16100E, 0x160F0D, 0x16100E, 0x271F21, 0x241F1E, 0x261F20, 0x261E20, 0x261F20, 0x261E1F, 0x251F20, 0x261F21, 0x261E20, 0x282122, 0x160F0E, 0x160F0E, 0x170F0F, 0x150F0E, 0x160F0D, 0x5D1D1B, 0x581B1A, 0x5E1E1B, 0x5F1F1C, 0xDA7924, 0xDA7A23, 0xD47821, 0x5F1C1A, 0x5F1B1A, 0x5C1B1A, 0x571719, 0x4B1418, 0xAC3823, 0xAB3926, 0xE15E24, 0xE16024, 0x4A2019, 0x4A2118, 0x150E0D, 0x160F0D, 0x150F0D, 0x150F0E, 0x150E0D, 0x160F0E, 0x16100E, 0x160F0E, 0x160F0E, 0x17100E, 0x17100F, 0x170F0D, 0x160F0E, 0x16100D, 0x160F0E, 0x160F0F, 0x160F0E, 0x16100F, 0x160F0E, 0x160F0D, 0x16100E, 0x160F0D, 0x150F0D, 0x160F0D, 0x15100E, 0x160F0E, 0x16110F, 0x160F0E, 0x15100E, 0x15100E, 0x150E0E, 0x272122, 0x272121, 0x272121, 0x272122, 0x271F22, 0x272022, 0x262121, 0x272122, 0x262121, 0x282123, 0x16100D, 0x17100E, 0x15100E, 0x15100D, 0x160F0E, 0x160E0D, 0x16100E, 0x5E1F1C, 0x5E1D1B, 0xDA7823, 0xD97922, 0xD87423, 0x5F1B1B, 0x601B1A, 0x5F1C1A, 0x5F1C1B, 0x4F1519, 0xAC3824, 0xAA3824, 0xE25D25, 0xE35E25, 0x492018, 0x492117, 0x482019, 0x482017, 0x22120F, 0x15100D, 0x160F0E, 0x16100D, 0x160F0E, 0x16100E, 0x160F0D, 0x17100E, 0x170F0E, 0x160F0E, 0x160F0E, 0x160F0F, 0x16100E, 0x16100E, 0x160F0F, 0x17100F, 0x150F0D, 0x16100D, 0x17100D, 0x160F0D, 0x160F0E, 0x160F0C, 0x282121, 0x282122, 0x262022, 0x262122, 0x272022, 0x292122, 0x282023, 0x272123, 0x272021, 0x292122, 0x272023, 0x272023, 0x272022, 0x282123, 0x281F23, 0x262022, 0x272022, 0x282023, 0x282022, 0x160F0D, 0x160F0E, 0x16100E, 0x16100E, 0x170F0E, 0x5E1E1C, 0x5E1E1B, 0xEAAA32, 0xE8A831, 0xE2A02E, 0x5F1B1A, 0x5F1B1A, 0x5F1C19, 0x5F1B1A, 0x581A1A, 0xAB3824, 0xAC3726, 0x4B2118, 0x492218, 0x624346, 0x624346, 0x472017, 0x472018, 0x231512, 0x170F0E, 0x17100E, 0x170F0E, 0x16100E, 0x170F0E, 0x160F0E, 0x170F0D, 0x17100E, 0x16100D, 0x170F0D, 0x16100D, 0x170F0D, 0x170F0E, 0x160E0E, 0x160F0E, 0x160F0E, 0x17100D, 0x170F0D, 0x16100E, 0x16100E, 0x170F0D, 0x272022, 0x282022, 0x262122, 0x262022, 0x272022, 0x272022, 0x282123, 0x272022, 0x272122, 0x282122, 0x282021, 0x282122, 0x272021, 0x282022, 0x272122, 0x282023, 0x282021, 0x292123, 0x272123, 0x16100D, 0x16100E, 0x16100E, 0x160F0F, 0x160F0E, 0x5F1E1C, 0x5E1E1C, 0xE9A732, 0xE7A731, 0xE49C2D, 0x5E1B1B, 0x5E1C1A, 0x5F1C1A, 0x601C1B, 0x81281E, 0xAB3724, 0xAB3925, 0x4B211A, 0x4C2119, 0x634348, 0x624448, 0x482019, 0x482018, 0x291412, 0x16100E, 0x170F0E, 0x15100E, 0x16100E, 0x170F0E, 0x18100F, 0x160F0E, 0x17100E, 0x16100E, 0x16100E, 0x170F0E, 0x160F0D, 0x16100E, 0x17100D, 0x160E0E, 0x16100E, 0x16100D, 0x17100E, 0x160F0C, 0x262022, 0x262021, 0x291F21, 0x282122, 0x272021, 0x262122, 0x292121, 0x17100E, 0x160E0E, 0x272022, 0x272023, 0x2A2426, 0x160F0E, 0x160F0E, 0x150F0D, 0x16100E, 0x15100D, 0x160F0E, 0x160F0E, 0x160F0F, 0x16100E, 0x16100D, 0x150F0E, 0x150F0E, 0x170F0E, 0x160F0D, 0x15100E, 0x16100D, 0x492118, 0x492019, 0x4B2217, 0xD97A23, 0xDA7B23, 0x5E1B1A, 0x5F1B1B, 0x601B1B, 0x5F1C1A, 0x5E1E1D, 0xC0C0C9, 0xBFBFC9, 0x624247, 0x614448, 0x482018, 0x472018, 0x291613, 0x160F0E, 0x170E0F, 0x16100D, 0x17110F, 0x16110D, 0x160F0E, 0x160F0E, 0x171010, 0x17100F, 0x160F0F, 0x17100D, 0x15100C, 0x170F0E, 0x16100E, 0x16100E, 0x16100D, 0x15100E, 0x16100E, 0x170F0E, 0x272023, 0x272022, 0x272022, 0x272122, 0x262122, 0x272022, 0x282022, 0x160F0D, 0x160F0D, 0x272123, 0x262121, 0x2A2426, 0x16100F, 0x17100D, 0x16100E, 0x150F0D, 0x16100D, 0x160F0E, 0x17100E, 0x160F0F, 0x160F0E, 0x170F0E, 0x170F0F, 0x160F0D, 0x17100E, 0x16100E, 0x16100C, 0x17100E, 0x492018, 0x482117, 0x4B2016, 0xD97B24, 0xD97C24, 0x5E1B1A, 0x601B1B, 0x5F1B1A, 0x5E1C1B, 0x5D1A1A, 0xC0C0C9, 0xBFC0CA, 0x614349, 0x624348, 0x462019, 0x461F19, 0x2D1813, 0x160F0D, 0x160F0E, 0x16100D, 0x170F0E, 0x160E0D, 0x160F0E, 0x15100E, 0x160F0D, 0x160F0E, 0x160F0D, 0x16100E, 0x160E0E, 0x16100D, 0x16100D, 0x160F0D, 0x160E0D, 0x17100D, 0x160F0C, 0x160F0C, 0x282122, 0x282123, 0x272022, 0x282022, 0x282021, 0x282021, 0x272021, 0x15100D, 0x160F0E, 0x272122, 0x272121, 0x2A2426, 0x150F0D, 0x16100E, 0x0A0809, 0x1C1211, 0x17100E, 0x170E0C, 0x16100D, 0x18100E, 0x130F0D, 0x150E0B, 0x16100B, 0x1C120E, 0x15100E, 0x17110E, 0x170F0E, 0x160F0D, 0x471E19, 0x471F19, 0x471E16, 0xDA7B25, 0xDA7C25, 0x5C1818, 0x5E181B, 0x611D20, 0x631D1E, 0x611D1C, 0xBEBEC7, 0xBFC2C9, 0x65434A, 0x634347, 0x462018, 0x462018, 0x321A14, 0x160F0E, 0x16100E, 0x150F0E, 0x16100E, 0x15100D, 0x16100E, 0x16100E, 0x16100E, 0x16100E, 0x170F0E, 0x17100E, 0x170F0F, 0x15100E, 0x160F0E, 0x160F0D, 0x16100F, 0x272023, 0x252021, 0x262021, 0x272222, 0x282022, 0x15100D, 0x17100E, 0x17100E, 0x170F0E, 0x15100E, 0x17100E, 0x17100E, 0x271F21, 0x282021, 0x292425, 0x160F0E, 0x170F0C, 0xD27D51, 0xD07C53, 0xD07D52, 0xD17F54, 0xD07F53, 0xD07E54, 0xD17E53, 0xD27F54, 0xD27E53, 0xDC8658, 0x15100D, 0x16100E, 0x160F0D, 0x17100E, 0x160F0E, 0x16100D, 0x180E0C, 0xDB7A23, 0xDB7B24, 0x653F38, 0x653F37, 0x927286, 0x8B6976, 0x8B6876, 0x8C6977, 0x8A6976, 0xC0BFCB, 0xC0C0CB, 0x462118, 0x472118, 0x361A15, 0x170F0F, 0x160F0E, 0x16100E, 0x16100E, 0x17100F, 0x16100E, 0x160F0E, 0x160F0E, 0x160F0E, 0x16100D, 0x170F0D, 0x160F0F, 0x160F0E, 0x160F0C, 0x160F0E, 0x15100C, 0x282122, 0x272022, 0x272123, 0x272122, 0x272023, 0x160F0D, 0x16100F, 0x160F0D, 0x150F0E, 0x160F0E, 0x160F0D, 0x150F0D, 0x272021, 0x272022, 0x2B2525, 0x160F0C, 0x16100E, 0xD07D52, 0xD07D51, 0xD17D53, 0xD17F51, 0xD07F53, 0xD17E52, 0xD17E53, 0xD27D52, 0xD17E54, 0xC87E52, 0x160F0E, 0x160E0C, 0x170F0D, 0x160E0D, 0x16100E, 0x160F0F, 0x140E0C, 0xDA7C26, 0xDA7924, 0x663F38, 0x663F39, 0x947286, 0x8A6976, 0x8D6974, 0x8B6976, 0x8A6977, 0xC1C0CB, 0xC0C1CA, 0x472017, 0x472118, 0x3A1A15, 0x170F0E, 0x160F0E, 0x170F0E, 0x16100E, 0x160F0E, 0x17100E, 0x17100E, 0x170F0F, 0x16100E, 0x16100D, 0x16100D, 0x15100E, 0x16100E, 0x160E0F, 0x282022, 0x292022, 0x272122, 0x272021, 0x282020, 0x272022, 0x272023, 0x17100D, 0x16100D, 0x160F0D, 0x160F0E, 0x16100F, 0x262122, 0x272022, 0x160F0D, 0x160F0D, 0x000102, 0xCF7E52, 0xD07E53, 0xEAA16F, 0xEAA16F, 0xEBA16F, 0xEBA16E, 0xEBA16F, 0xEBA16F, 0xEAA170, 0xEAA170, 0xEAA16F, 0xEAA070, 0xECA16E, 0xEAA16F, 0xEAA070, 0xEBA16F, 0x16100E, 0x16100E, 0x160F0C, 0x160F0D, 0x150F0D, 0x853117, 0x853117, 0x66413D, 0x663E39, 0x633F38, 0x8B6976, 0x8B6977, 0x8C6876, 0x8C6976, 0x472118, 0x482018, 0x361914, 0x170F0D, 0x150F0F, 0x16100E, 0x17100E, 0x160F0D, 0x16100E, 0x160F0E, 0x170E0F, 0x150F0E, 0x160F0D, 0x160F0E, 0x160F0E, 0x16100E, 0x160F0E, 0x272021, 0x272023, 0x262022, 0x272022, 0x272021, 0x272022, 0x272122, 0x150F0D, 0x16100E, 0x160F0D, 0x15100E, 0x160F0E, 0x272023, 0x272122, 0x160F0E, 0x150F0E, 0x010304, 0xD07E52, 0xD17D52, 0xEDA473, 0xECA876, 0xEAA272, 0xEBA16F, 0xECA673, 0xEBA472, 0xEAA26F, 0xF0AC79, 0xEBA270, 0xEEB380, 0xF1B380, 0xF0AC79, 0xF3B47F, 0xF0B681, 0x16100E, 0x17100D, 0x17100F, 0x160F0E, 0x150F0E, 0x843118, 0x843117, 0x674039, 0x663F38, 0x653E39, 0x8B6A75, 0x8B6877, 0x8C6977, 0x8B6975, 0x472018, 0x472018, 0x351A14, 0x16100E, 0x150E0D, 0x160F0E, 0x150F0E, 0x17100E, 0x150F0D, 0x16100D, 0x16100D, 0x170F0E, 0x150F0E, 0x170F0E, 0x17100E, 0x160F0E, 0x160F0E, 0x272022, 0x272122, 0x272121, 0x262023, 0x272122, 0x282122, 0x272022, 0x272022, 0x271F21, 0x221B1B, 0x150F0E, 0x16100E, 0x16100D, 0x16100F, 0xCC7B51, 0xCB794F, 0xCF7C50, 0xD17F52, 0xEDA472, 0xAD2F13, 0xF1B17D, 0xC74521, 0xE59261, 0xECA571, 0xE69263, 0xE8A070, 0xCF512B, 0xEBA270, 0xEAA572, 0xCE4F29, 0xC85B34, 0xEA7F3E, 0xEBA271, 0x262022, 0x271F22, 0x271F21, 0x16100E, 0x16100E, 0x5F1A1B, 0x5F1A1A, 0xCC3F27, 0xB53C25, 0xB63A24, 0x4D231A, 0x4B231A, 0x8C6975, 0x8B6A77, 0x462018, 0x461F18, 0x381B16, 0x160F0D, 0x160F0E, 0x16100E, 0x16100E, 0x160F0E, 0x140F0E, 0x15110F, 0x15100E, 0x160F0E, 0x160F0E, 0x16100E, 0x15100F, 0x17100E, 0x16100D, 0x272023, 0x271F21, 0x272022, 0x272022, 0x272122, 0x282122, 0x282022, 0x272021, 0x272122, 0x231A1C, 0x17110F, 0x150F0E, 0x160E0F, 0x160F0E, 0xD17E52, 0xD17E53, 0xD17E52, 0xD07E52, 0xECA16E, 0xB63D1E, 0xEAA170, 0xE99E6D, 0xDF8858, 0xEB7E41, 0xECA06E, 0xE89D6D, 0xCC4B25, 0xC84925, 0xE06B42, 0xCD4D29, 0xB84221, 0xEBA16E, 0xEAA16E, 0x282022, 0x292023, 0x272022, 0x17100E, 0x160F0F, 0x601B1A, 0x5F1B1A, 0x9B3123, 0xB83B25, 0xB93C26, 0x4A2119, 0x492118, 0x8B6877, 0x8B6877, 0x472018, 0x472119, 0x341915, 0x16100E, 0x160F0E, 0x15100E, 0x17100E, 0x160F0E, 0x15100D, 0x16110E, 0x16100F, 0x160F0E, 0x16100F, 0x15100E, 0x15100E, 0x16100E, 0x16100E, 0x272023, 0x272022, 0x271F23, 0x272022, 0x272022, 0x282022, 0x282022, 0x272022, 0x262021, 0x251D1F, 0x16100D, 0x17100D, 0x17100E, 0x160F0E, 0xD07F53, 0xCF7E54, 0xCE7F54, 0xD07E52, 0xEBA16F, 0xB73F1E, 0xE99F6D, 0xB94020, 0xCD683D, 0xD8582B, 0xD25029, 0xF6BB86, 0xCE4D28, 0xEBA170, 0xE77751, 0xCD4D29, 0xE39161, 0xBA411E, 0xB63A17, 0x272022, 0x282123, 0x272021, 0x160F0E, 0x160E0E, 0x5F1B1B, 0x5F1C1A, 0xA33721, 0xB63A26, 0xB93C28, 0x4A2218, 0x4B2219, 0x8B6B74, 0x8B6876, 0x462017, 0x472019, 0x351A14, 0x150F0E, 0x160F0E, 0x160F0D, 0x150F0E, 0x150F0E, 0x16100D, 0x170F0E, 0x160F0E, 0x170F0E, 0x16100E, 0x150F0D, 0x140D09, 0x282022, 0x261F22, 0x272022, 0x272022, 0x272022, 0x272021, 0x282122, 0x160F0D, 0x16100E, 0x272122, 0x272021, 0x262121, 0x272021, 0x282122, 0x160F0E, 0x160F0E, 0x160F0E, 0x140F0D, 0x1D130F, 0xD07E53, 0xEBA170, 0xB63D1E, 0xEBA171, 0xCB4925, 0xF4B37B, 0xEBA170, 0xECA170, 0xC14B26, 0xCE5028, 0xEAA16F, 0xEBA270, 0xCF4E28, 0xCA6138, 0xEAA06F, 0xEAA06F, 0x262022, 0x282023, 0x281F21, 0x150F0D, 0x17100C, 0x601A1B, 0x601B1A, 0x5F1B1B, 0x5F1B1A, 0x601C1B, 0xDA7B24, 0xDA7B25, 0x492118, 0x4A2118, 0x462018, 0x472017, 0x401F18, 0x15100D, 0x160F0E, 0x160F0D, 0x150F0D, 0x160E0E, 0x150E0D, 0x160F0E, 0x170F0E, 0x160F0D, 0x160F0E, 0x150F0F, 0x130C09, 0x271F21, 0x272022, 0x282122, 0x272021, 0x272022, 0x282022, 0x261F23, 0x170F0E, 0x17100F, 0x282022, 0x272122, 0x281F22, 0x282021, 0x272022, 0x16100E, 0x160F0D, 0x160E0D, 0x16100E, 0x170F0F, 0xD27E54, 0xECA16F, 0xEDA270, 0xE26332, 0xEA7F4A, 0xEFAE7C, 0xEAA26F, 0xEAA171, 0xE16732, 0xDC6A3B, 0xEAA271, 0xECA26F, 0xE89C6A, 0xEBA16F, 0xD7582D, 0xC93F1B, 0x272023, 0x282122, 0x272022, 0x16100E, 0x16100C, 0x601A1A, 0x5E1B1A, 0x5F1B1A, 0x5D1C1A, 0x601C1D, 0xD97C23, 0xDA7A24, 0x482117, 0x4B2019, 0x462019, 0x472017, 0x462018, 0x472018, 0x472118, 0x16100F, 0x150F0E, 0x150F0E, 0x160F0E, 0x150F0F, 0x16100D, 0x170F0D, 0x16110E, 0x16100E, 0x120C0A, 0x272022, 0x282023, 0x271F22, 0x272122, 0x150F0D, 0x160F0D, 0x160E0E, 0x160F0D, 0x15100E, 0x272122, 0x262123, 0x272021, 0x272023, 0x271F21, 0x160F0F, 0x170F0E, 0x271F22, 0x262022, 0x2A2221, 0xD28155, 0xEAA170, 0xF3B785, 0xEBA97B, 0xECA87B, 0xE9A979, 0xEBA16F, 0xEAA270, 0xE36029, 0xECA070, 0xD4572C, 0xC74922, 0xEAA16F, 0xD5572A, 0xD14D24, 0xEBA16F, 0x150E0E, 0x160F0E, 0x160F0D, 0x150F0D, 0x15100E, 0x813019, 0x832F17, 0x471F18, 0x4A2217, 0x4A2118, 0x492018, 0x4A2118, 0xDA7B22, 0xD87924, 0x462018, 0x462118, 0x462018, 0x482018, 0x482119, 0x16100D, 0x17100D, 0x160E0F, 0x170F0E, 0x160F0E, 0x160F0E, 0x16100E, 0x150E0D, 0x160F0D, 0x130D0A, 0x272122, 0x272022, 0x262021, 0x272121, 0x160F0C, 0x160F0D, 0x160F0E, 0x16100E, 0x160F0E, 0x282022, 0x272022, 0x272022, 0x282022, 0x271F21, 0x17100E, 0x16100E, 0x272021, 0x282021, 0x2B2022, 0xEAA271, 0xEBA26F, 0xD0512A, 0xEBA16E, 0xBF4421, 0xEFAD7A, 0xEBA270, 0xEAA06F, 0xD3542A, 0xEBA16F, 0xD3562D, 0xEBA16F, 0xEAA16F, 0xC33E1B, 0xEAA270, 0xCB4C26, 0x150F0E, 0x160F0F, 0x16100D, 0x16100D, 0x16100E, 0x812F17, 0x812F17, 0x462015, 0x492019, 0x491F18, 0x4A2119, 0x492019, 0xDA7B25, 0xDA7B24, 0x462119, 0x472018, 0x482118, 0x482118, 0x482019, 0x17100E, 0x160F0D, 0x16100E, 0x16100E, 0x16100E, 0x160E0E, 0x16100E, 0x160F0D, 0x16100E, 0x130C0B, 0x282023, 0x272022, 0x17100E, 0x1C1314, 0x17100E, 0x160F0D, 0x15100C, 0x251D1D, 0x261F1F, 0x272021, 0x272021, 0x261F22, 0x1A1211, 0x191212, 0x1D1514, 0x170F10, 0x241D1D, 0x251E1F, 0x292121, 0xEAA271, 0xEAA270, 0xCF4E28, 0xEAA271, 0xC44824, 0xF1B27B, 0xECA06F, 0xEBA170, 0xD24E27, 0xEBA06E, 0xC94A25, 0xCC4B26, 0xEBA16E, 0xC54623, 0xC23717, 0xD16035, 0x160E0E, 0x160F0D, 0x16100D, 0x160F0D, 0x160F0E, 0x822F17, 0x823017, 0x4C2116, 0x492119, 0x492019, 0x3B1E17, 0x3B1E17, 0xDC7E24, 0xDB7A25, 0x462017, 0x482018, 0x482018, 0x482118, 0x462018, 0x15100E, 0x16100D, 0x150F0D, 0x17110D, 0x160F0E, 0x160F0F, 0x170F0E, 0x160F0E, 0x160F0E, 0x150F0C, 0x271F21, 0x281F21, 0x15100E, 0x15100D, 0x150F0E, 0x150E0E, 0x140F0C, 0x262021, 0x282021, 0x282021, 0x262021, 0x272021, 0x15100D, 0x150F0D, 0x282021, 0x272022, 0x16100E, 0x16100E, 0x191110, 0xEAA270, 0xEAA170, 0xD04F28, 0xEBA16F, 0xC54925, 0xEBA270, 0xEBA16F, 0xEBA16E, 0xE8A16E, 0xECA170, 0xF38A49, 0xECA06F, 0xEBA271, 0xCA4E28, 0xEBA170, 0xD15027, 0x160E0E, 0x160F0E, 0x160F0E, 0x160F0D, 0x15100E, 0x822F17, 0x822F19, 0x4D2117, 0x492118, 0x492118, 0x833017, 0x853018, 0x863017, 0x853118, 0x472017, 0x472018, 0x472118, 0x472018, 0x462118, 0x16110E, 0x160F0E, 0x160F0E, 0x160E0E, 0x16100D, 0x150F0E, 0x160F0E, 0x16100E, 0x16100E, 0x160D0D, 0x281F21, 0x262022, 0x150F0E, 0x170F0E, 0x17100D, 0x160F0E, 0x140E0E, 0x282022, 0x272022, 0x272023, 0x272022, 0x271F22, 0x160F0E, 0x150F0E, 0x281F21, 0x261F22, 0x15100E, 0x160F0F, 0x170E0C, 0xEBA370, 0xEAA270, 0xEFA16F, 0xE77344, 0xEAA173, 0xEAA270, 0xECA16E, 0xCC4B25, 0xECA16E, 0xEBA16F, 0xC9461F, 0xCF4C27, 0xE99E6D, 0xE66E34, 0xEBA270, 0xED874F, 0x160F0D, 0x160F0E, 0x15100C, 0x15100F, 0x160F0E, 0x822F18, 0x822F19, 0x4F2118, 0x492118, 0x492019, 0x842F17, 0x852F18, 0x853017, 0x843118, 0x472019, 0x472118, 0x432016, 0x742120, 0x741F20, 0x150F0D, 0x150E0E, 0x160F0E, 0x160F0E, 0x150F0E, 0x170F0E, 0x16100E, 0x15100F, 0x16100F, 0x160F0E, 0x160F0E, 0x16100E, 0x16100E, 0x16100E, 0x16100E, 0x160E0D, 0x16100D, 0x272021, 0x272121, 0x16100E, 0x170F0D, 0x150F0E, 0x16100E, 0x18100E, 0x150F0E, 0x17110E, 0xD18054, 0xD17F54, 0xCA7D54, 0x272023, 0x272022, 0x272021, 0x262021, 0x272022, 0x282023, 0x2B2324, 0xECA16F, 0xE9A270, 0xEAA270, 0xEAA170, 0xEBA06F, 0xECA16F, 0xEBA06F, 0xEBA171, 0xD07E52, 0x893E31, 0x893E31, 0x8C3C32, 0x160F0E, 0x16100F, 0x4A2018, 0x482218, 0x492119, 0x492118, 0x49221A, 0x852F17, 0x843018, 0x842F18, 0x843017, 0x472019, 0x471F19, 0x3F2017, 0x741F20, 0x74211F, 0x16100E, 0x160F0D, 0x160F0E, 0x160F0E, 0x160E0E, 0x160F0D, 0x160F0E, 0x160F0E, 0x15100E, 0x160F0D, 0x17100D, 0x15100E, 0x160F0E, 0x160F0E, 0x16100E, 0x150F0E, 0x140F0D, 0x272022, 0x272022, 0x170E0E, 0x16100C, 0x160F0E, 0x160F0E, 0x150E10, 0x16100E, 0x160E0E, 0xD17F53, 0xD17E53, 0xC97C53, 0x282123, 0x262022, 0x282122, 0x272023, 0x282022, 0x292122, 0x2A2223, 0xEAA16F, 0xEAA16E, 0xEAA270, 0xEBA16F, 0xEBA06F, 0xEBA26F, 0xEBA170, 0xEBA170, 0xD07E53, 0x873D30, 0x893E33, 0x8B4033, 0x150F0F, 0x15100D, 0x4A2119, 0x4A2119, 0x4A2119, 0x492118, 0x492119, 0x842F17, 0x843018, 0x852F18, 0x853018, 0x482018, 0x491F19, 0x432217, 0x74211F, 0x76211F, 0x4F2319, 0x51261B, 0x16100D, 0x150F0E, 0x160E0E, 0x160F0D, 0x160F0E, 0x160F0E, 0x160F0D, 0x17100E, 0x16100E, 0x160F0E, 0x160F0E, 0x150E0D, 0x261F22, 0x262022, 0x272121, 0x272121, 0x272022, 0x160F0E, 0x150F0F, 0x170F0E, 0x150F0E, 0x160F0C, 0xD27E54, 0xE58D5C, 0xEFA775, 0xEBA070, 0xE9A170, 0xE89F6D, 0xE8A06D, 0xE69F6E, 0xF2A471, 0xD48153, 0xD08153, 0xCF7E51, 0xD27F53, 0xD17D53, 0xEBA16F, 0xEBA270, 0xEBA171, 0xECA26F, 0xEBA26F, 0xD17C52, 0xD17E53, 0xD48054, 0xD68356, 0xD58154, 0x160F0E, 0x170F0E, 0x4A2118, 0x4A2119, 0x4B2215, 0x593063, 0x5A2E61, 0x853017, 0x852F16, 0x843118, 0x852F18, 0x482119, 0x482019, 0x482018, 0x742021, 0x76211F, 0x482018, 0x482018, 0x15100D, 0x16110E, 0x160F0D, 0x16100F, 0x160F0E, 0x160F0D, 0x160F0E, 0x17100E, 0x160F0D, 0x170F0F, 0x150F0F, 0x16100E, 0x262022, 0x262022, 0x282021, 0x272022, 0x272022, 0x160F0E, 0x17100E, 0x15100F, 0x170F0D, 0x150F0C, 0xCF7F55, 0xCD7E54, 0xEBA471, 0xE9A071, 0xE7A070, 0xEAA272, 0xEAA16E, 0xEBA16F, 0xE8A06E, 0xD07D4F, 0xCF7F53, 0xCE7C53, 0xD17F54, 0xD17E53, 0xEBA26F, 0xEAA170, 0xEAA16F, 0xEBA270, 0xECA070, 0xD17F52, 0xD17F52, 0xD17E53, 0xD18054, 0xD07E54, 0x16100E, 0x160F0F, 0x492118, 0x4A1F19, 0x4B2321, 0x582E62, 0x592F64, 0x843118, 0x852F17, 0x862F17, 0x853119, 0x482019, 0x482218, 0x4C2016, 0x751F20, 0x732020, 0x481F18, 0x471F19, 0x160F0E, 0x170F0E, 0x17110F, 0x160F0E, 0x16100E, 0x160F0D, 0x17100D, 0x170F0E, 0x160F0E, 0x160F0D, 0x160F0D, 0x160F0E, 0x272022, 0x272022, 0x272021, 0x272122, 0x272124, 0x17110F, 0x170F0E, 0x170F0F, 0x160E0E, 0x150F0D, 0x16100F, 0x160F0E, 0x17100E, 0x15100E, 0x150F0D, 0x170F10, 0x15100E, 0x16100D, 0x150F0E, 0x140D0F, 0x150F0F, 0x150E0C, 0xD07F53, 0xD17F54, 0xECA171, 0xE9A170, 0xE8A270, 0xEAA06F, 0xECA172, 0xD27E54, 0xD17D54, 0xD27F54, 0xD28054, 0xCF7B54, 0x150F0E, 0x160E0D, 0x4A2018, 0x4A2018, 0x4B221E, 0x582E62, 0x5A2D61, 0x843018, 0x842F19, 0x853119, 0x813017, 0x472118, 0x482118, 0x421E15, 0x782C17, 0x792B18, 0x482118, 0x472017, 0x150F0D, 0x16100D, 0x150F0E, 0x16100D, 0x16100D, 0x17100E, 0x16100E, 0x16100E, 0x16100D, 0x150E0D, 0x272021, 0x272021, 0x160F0D, 0x160E0E, 0x170F0F, 0x160F0E, 0x160F0E, 0x150F0E, 0x170F0E, 0x16100E, 0x150E0D, 0x170F0E, 0x883E32, 0x8A3E31, 0x18100D, 0x160E0D, 0x070608, 0xE89D6E, 0xE69D6D, 0x282023, 0x272123, 0xF1A672, 0xE5996B, 0xE19B6B, 0x160F0F, 0x160F0E, 0x16100F, 0x16100E, 0x16100E, 0x160F0D, 0x150F0D, 0x150E0E, 0x160F0D, 0x16100D, 0x16100D, 0x170F0D, 0x292122, 0x272123, 0x492018, 0x482018, 0x4D252C, 0x572E65, 0x5C2D63, 0xC54329, 0xC54228, 0xF2B28D, 0xF4B38F, 0x482017, 0x492118, 0x411E16, 0x7A2C17, 0x792C17, 0x472118, 0x471F18, 0x150F0D, 0x150F0E, 0x17100D, 0x160E0E, 0x160F0F, 0x160F0E, 0x16100E, 0x160F0E, 0x15100D, 0x160F0D, 0x271F22, 0x272023, 0x160F0E, 0x16100E, 0x15100D, 0x16100F, 0x170F0E, 0x160F0D, 0x160F0E, 0x16100F, 0x150F0E, 0x160D0D, 0x883E31, 0x893F31, 0x17100D, 0x150F0D, 0x000100, 0xE89D6E, 0xE69E6E, 0x272022, 0x272222, 0xF0A471, 0xE69A6B, 0xE4996A, 0xE59A6A, 0xE59A6C, 0x150F0D, 0xD17F52, 0xD37F54, 0xD48155, 0x150F0E, 0x302C34, 0x2E2C34, 0xE3996C, 0xE89E6D, 0xE59C6D, 0xC9AFB3, 0x292123, 0x482017, 0x472018, 0x4E232B, 0x582E64, 0x5B2E63, 0xC3422A, 0xC64129, 0xF3B18D, 0xF2B38E, 0x481F18, 0x482018, 0x412017, 0x7A2B18, 0x792C18, 0x472119, 0x482018, 0x160F0E, 0x160F0F, 0x160F0D, 0x16100D, 0x160F0E, 0x16110F, 0x17100E, 0x170F0E, 0x16100E, 0x170F0E, 0x160F0E, 0x16100F, 0x8A3F31, 0x893F32, 0x863D32, 0x15100E, 0x160E0E, 0x15110D, 0x160F0E, 0x221C1C, 0x262022, 0x271F21, 0xD38054, 0xD07F54, 0xE79C6C, 0x000000, 0x010000, 0xE89E6E, 0xE99E6F, 0xE69B6B, 0xE6996A, 0xE59A6B, 0xE49A6B, 0xE5996B, 0xE4996A, 0xE6996B, 0x272123, 0xE89F6E, 0xD28255, 0xCF7F55, 0x160F0D, 0x312C33, 0x2F2C33, 0xE59B6D, 0xE89D6E, 0xE69E6D, 0xC8AFB4, 0x272022, 0x16100E, 0x150F0E, 0x73271A, 0xA93625, 0xA93625, 0xC44228, 0xC24227, 0x6C211F, 0x6C201F, 0x482118, 0x482019, 0x3C1D17, 0x792C18, 0x7A2B19, 0x472019, 0x471F18, 0x160F0E, 0x160F0D, 0x16100D, 0x17100F, 0x16100E, 0x17100E, 0x160F0D, 0x170E0D, 0x16100E, 0x160E0E, 0x160F0D, 0x160F0D, 0x8B3F33, 0x893E33, 0x833D32, 0x17100E, 0x160F0E, 0x160F0F, 0x16100E, 0x221D1D, 0x282021, 0x282022, 0xD17F53, 0xD27E54, 0xE79B6C, 0x2E2425, 0x050411, 0xE89E6D, 0xE79E6D, 0xE49B6C, 0xE59A6B, 0xE59A6A, 0xE5996B, 0xE69A6B, 0xE5996C, 0x16161E, 0xF9AE75, 0xE79C6D, 0xD48153, 0xD17F55, 0x150F0C, 0xFDB578, 0xFBAD76, 0xE69A6C, 0xE59A6D, 0xE59B6C, 0xC9AFB4, 0x282123, 0x160F0E, 0x150F0E, 0x9A3020, 0xAA3526, 0xA73624, 0xC34228, 0xC34028, 0x6B201F, 0x6D201F, 0x512219, 0x502219, 0x431D15, 0x762D18, 0x732D19, 0x482019, 0x452118, 0x160F0F, 0x17100E, 0x150F0D, 0x130D0C, 0x130D0C, 0x160F0F, 0x160F0E, 0x160F0E, 0x150F0E, 0x170F0E, 0x160F0E, 0x160E0D, 0x853F31, 0x873F35, 0x8D3E33, 0x160F0E, 0x16100E, 0x090A09, 0x0F0D0D, 0x241D20, 0x262122, 0x272124, 0xD27E54, 0xD07E51, 0xE89E6C, 0x271F25, 0x121115, 0xE39A6D, 0xF6A976, 0xE69B6C, 0xE59B6B, 0xE59A6A, 0xE59A6A, 0xE59A6D, 0xE69A6E, 0x272227, 0xE79A6B, 0xE69A6C, 0xD18055, 0xD48356, 0x160E0A, 0xE5996B, 0xE59A6A, 0xE59A6B, 0xE69B6C, 0xE2996F, 0xF2D8E0, 0x261F23, 0x160F0D, 0x16100E, 0xC43D2C, 0xB73B26, 0xAA3725, 0xC33C27, 0xBF4128, 0x6B2120, 0x6A211F, 0x160F0D, 0x160F0E, 0x170F0E, 0x160F0E, 0x160F0E, 0x160F0E, 0x160F0E, 0x17100D, 0x16100E, 0x120B08, 0x282022, 0x282121, 0x170F0E, 0x160F0E, 0x16100E, 0x160F0E, 0x16100D, 0x17110E, 0x15100E, 0x160F0D, 0x16100D, 0x15100E, 0x16100E, 0x170F0E, 0x472118, 0x482017, 0xDA8055, 0xD07F54, 0xD17F53, 0xECA270, 0xEBA26F, 0xEBA26F, 0xEAA170, 0xFEBD80, 0x282124, 0x292224, 0xE2976C, 0xE3986B, 0xE3986A, 0xE5986A, 0xE1966C, 0x2D2C32, 0xE5996B, 0xE5996B, 0xE69A6C, 0xD58458, 0xD08053, 0x252023, 0xE4996B, 0xE3996A, 0xE4996B, 0xE5996C, 0xE29B6C, 0x272021, 0x170F0D, 0x160F0E, 0x16100E, 0x7C2222, 0x6A201F, 0x6A2021, 0xE3A176, 0xE3A076, 0x6A2120, 0x6C2120, 0x150F0D, 0x150F0D, 0x160F0E, 0x160F0F, 0x180F0E, 0x160F0E, 0x150F0E, 0x160F0E, 0x170F0D, 0x120B08, 0x282122, 0x272122, 0x160E0D, 0x170F0D, 0x160F0D, 0x160F0E, 0x170F0E, 0x16100D, 0x150F0D, 0x16100E, 0x160F0E, 0x170F0F, 0x180F0E, 0x170F0D, 0x472118, 0x472018, 0xE28B5B, 0xD27E54, 0xD27E51, 0xEBA170, 0xECA171, 0xEBA071, 0xECA270, 0xEBA270, 0xEBA26F, 0xEAA171, 0x292428, 0x2A2328, 0x2A2428, 0x292528, 0x282426, 0xE59B6C, 0xE69A6C, 0xE69A6A, 0xE79A6C, 0xE79C6D, 0xE69C6D, 0xD38155, 0x302D34, 0x302D34, 0x302C34, 0x2F2C33, 0x312C32, 0x170F0E, 0x160F0E, 0x160F0E, 0x160E0D, 0x7E2522, 0x6A201E, 0x6C2020, 0xE3A175, 0xE2A076, 0x6B2020, 0x6B1F20, 0x160F0E, 0x160F0D, 0x170F0D, 0x16100E, 0x15100E, 0x150F0E, 0x160F0D, 0x282021, 0x282022, 0x272022, 0x292122, 0x272022, 0x271F22, 0x282022, 0x272021, 0x272020, 0x272021, 0x160F0E, 0x150F0F, 0x16100F, 0x150F0E, 0x16100E, 0x170F0D, 0x15100D, 0x482117, 0x492018, 0xE98F5E, 0xD28054, 0xD18052, 0xEBA170, 0xEAA170, 0xE9A171, 0xEBA271, 0xEAA270, 0xEBA16F, 0xEBA16F, 0xE69C6D, 0xE69A6B, 0xE5996A, 0xE59A6B, 0xE59A6B, 0xD17E53, 0xD17E52, 0xE79C6B, 0xE69B6C, 0xE79C6D, 0xE99F6F, 0xD18052, 0xECA06F, 0xECA26F, 0xD28053, 0xED945F, 0x4A2018, 0x15110D, 0x160F0E, 0x160F0E, 0x17100E, 0x812725, 0x6A1F1F, 0x6B1F1F, 0xEB6338, 0xEB6339, 0x6B2020, 0x6B201F, 0x160F0D, 0x16100E, 0x150F0D, 0x150F0D, 0x150F0D, 0x160F0E, 0x150F0F, 0x272021, 0x282021, 0x272022, 0x272022, 0x272121, 0x262022, 0x272021, 0x272021, 0x272123, 0x272022, 0x160F0D, 0x15100D, 0x170F0E, 0x16100E, 0x160F0E, 0x17100F, 0x16100D, 0x492019, 0x472018, 0xEA905E, 0xD28055, 0xD28054, 0xEBA270, 0xEBA170, 0xEBA171, 0xEBA16F, 0xEAA26F, 0xEBA26F, 0xE9A16F, 0xE59B6B, 0xE5996C, 0xE59A6B, 0xE69A6A, 0xE4986A, 0xD07E53, 0xD07E53, 0xD07D52, 0xD17E53, 0xD17D53, 0xD17E53, 0xD17F53, 0xECA270, 0xEBA170, 0xD17F52, 0xE7905F, 0x4A1F18, 0x16110E, 0x16100E, 0x140F0E, 0x160F0E, 0x882624, 0x6A201E, 0x6A1F20, 0xEB6138, 0xEC6139, 0x6A221E, 0x6B1F1F, 0x160F0E, 0x170F0D, 0x170F0D, 0x16100E, 0x16100E, 0x282021, 0x261F21, 0x271F22, 0x272121, 0x272122, 0x282121, 0x252022, 0x272023, 0x272123, 0x272022, 0x272022, 0x281F21, 0x262023, 0x272021, 0x262021, 0x272022, 0x292023, 0x160F0D, 0x16100C, 0x893F31, 0x8B4033, 0xD78355, 0xD17E53, 0xD28053, 0xEBA270, 0xECA171, 0xEAA171, 0xEAA170, 0xECA16F, 0xEBA171, 0xE9A16E, 0xE69C6D, 0xE59B6B, 0xE5996C, 0xE59A6B, 0xE59969, 0xE5996B, 0xE5996A, 0xE5996C, 0xE59A6B, 0xD88559, 0xD08052, 0xDF9061, 0xEBA16F, 0xEBA170, 0x984324, 0xA44829, 0x150E0E, 0x150F0E, 0x150F0E, 0x16100E, 0x16100E, 0x842621, 0x691F20, 0x6B211F, 0xE28A61, 0xE4845C, 0x6B211F, 0x6B2120, 0x160F0D, 0x160F0E, 0x16100E, 0x160F0E, 0x160F0E, 0x271F22, 0x282022, 0x272021, 0x282022, 0x272122, 0x282122, 0x282022, 0x271F22, 0x282122, 0x282022, 0x282021, 0x271F22, 0x261F21, 0x271F21, 0x252022, 0x271F22, 0x272022, 0x16100E, 0x160F0D, 0x8C4134, 0x8B4134, 0xD27E52, 0xD37F53, 0xD28055, 0xEAA16F, 0xEAA170, 0xEAA170, 0xEAA16F, 0xE9A271, 0xEBA270, 0xEAA170, 0xE79C6D, 0xE69B6C, 0xE59A6C, 0xE49B6C, 0xE59A6B, 0xE69A6B, 0xE4996B, 0xE69A6B, 0xE7996C, 0xDA8A5F, 0xD27F53, 0xE6996B, 0xECA270, 0xEAA26F, 0xA04529, 0xAE4B2D, 0x150F0E, 0x16100F, 0x17110E, 0x170E0D, 0x160F0E, 0x822625, 0x6A1F1E, 0x691F1F, 0xE5A076, 0xE4A177, 0x6B2020, 0x6B2121, 0x150F0E, 0x150F0D, 0x150F0D, 0x16100E, 0x150F0E, 0x282022, 0x292023, 0x282122, 0x282022, 0x272122, 0x282022, 0x272022, 0x272121, 0x282122, 0x272022, 0x262022, 0x272022, 0x272022, 0x272022, 0x272122, 0x272022, 0x272022, 0x160F0D, 0x150F0D, 0x8C4034, 0x8B4034, 0xD27D52, 0xD18052, 0xD18053, 0xECA170, 0xEBA06F, 0xEAA26F, 0xECA26F, 0xEAA271, 0xEBA170, 0xEAA171, 0xD07E52, 0xD17F53, 0xCD784F, 0xE69B6D, 0xE7986B, 0xE6996C, 0xE6976C, 0xE69A6C, 0xE7996C, 0xD0794F, 0xD07C4F, 0xE59A6A, 0xEBA06F, 0xEBA26F, 0xA4492F, 0xCC5737, 0x16100D, 0x15100D, 0x160F0E, 0x16100E, 0x170F0E, 0x822725, 0x69201E, 0x692020, 0xE3A078, 0xE4A077, 0x69201F, 0x6A1F1F, 0x160F0E, 0x16100E, 0x110B08, 0x272021, 0x262021, 0x272022, 0x271F21, 0x272022, 0x272022, 0x282022, 0x272122, 0x292022, 0x282023, 0x272123, 0x272021, 0x262023, 0x281F22, 0x261F21, 0x272021, 0x282021, 0x282022, 0x271F21, 0x272122, 0x272022, 0x272021, 0x272021, 0xBA704C, 0xD38154, 0xD28153, 0xEBA16F, 0xEBA270, 0xEBA270, 0xEAA16F, 0xEAA270, 0xECA16F, 0xEBA070, 0xD07D53, 0x9B4235, 0xC7604E, 0xC75E4D, 0xC75C4D, 0xC65C4D, 0xC75D4C, 0xC9624F, 0xC86251, 0xA14838, 0xAE4B3A, 0xD07C52, 0xEBA26F, 0xE97F39, 0x160F0E, 0x16100D, 0x18100E, 0x160F0E, 0x170F0E, 0x160F0E, 0x160F0D, 0x802623, 0x6A1F1E, 0x6C2121, 0xF5C6B2, 0xF6C8B2, 0xB53A26, 0xB43A26, 0x160F0E, 0x16100D, 0x120A08, 0x262022, 0x272022, 0x272122, 0x262022, 0x282022, 0x272022, 0x262222, 0x282022, 0x282123, 0x272121, 0x272022, 0x272022, 0x272021, 0x272122, 0x271F22, 0x272021, 0x272022, 0x272021, 0x272021, 0x272022, 0x272123, 0x272023, 0x272123, 0xAA6547, 0xD28054, 0xD28054, 0xEAA270, 0xEAA16F, 0xEAA171, 0xEBA06F, 0xEBA270, 0xEBA170, 0xEBA370, 0xD17D53, 0xEAA170, 0xCC644F, 0xCB6853, 0xCB6853, 0xCB6752, 0xCC6853, 0xCB6853, 0xCD6953, 0xF0A975, 0xECA070, 0xEBA16F, 0xEBA36F, 0x582516, 0x15100E, 0x150F0E, 0x17100D, 0x150F0E, 0x160F0E, 0x17100E, 0x15100E, 0x812623, 0x69201F, 0x6C2121, 0xF5C7B1, 0xF5C7B0, 0xB63B26, 0xB33A26, 0x150F0D, 0x16100E, 0x120C08, 0x272022, 0x272022, 0x272022, 0x272023, 0x16100D, 0x150F0E, 0x150F0D, 0x272023, 0x272121, 0x262022, 0x272122, 0x282122, 0x261F22, 0x282021, 0x272022, 0x271F21, 0x272122, 0x272023, 0x282121, 0x282122, 0x272022, 0x282022, 0x282122, 0x282022, 0x282122, 0x292022, 0xD38053, 0xD27E53, 0xEBA16F, 0xEBA270, 0xEBA26F, 0xEBA171, 0xEBA270, 0xEAA16F, 0xEAA170, 0xEBA16F, 0xEBA16F, 0xEAA070, 0xEAA070, 0xEAA170, 0xEAA170, 0xEBA16F, 0xECA270, 0xEBA170, 0xEBA270, 0xE48E4F, 0x8F3723, 0x150E0D, 0x15100D, 0x16100E, 0x160F0D, 0x160F0E, 0x160F0E, 0x160F0D, 0x812625, 0x6A201F, 0x6A201E, 0xE55F39, 0xE35E3A, 0xB53A25, 0xB43A27, 0x150F0D, 0x160F0E, 0x110C08, 0x272022, 0x272021, 0x282123, 0x272120, 0x160F0E, 0x170F0E, 0x150F0C, 0x281F23, 0x281F22, 0x281F21, 0x282122, 0x272022, 0x272023, 0x292021, 0x282022, 0x262022, 0x272122, 0x282022, 0x271F22, 0x272122, 0x262022, 0x282022, 0x271F22, 0x272021, 0x282122, 0x282122, 0xD27F53, 0xD17F53, 0xECA16F, 0xEAA270, 0xEBA070, 0xEAA070, 0xEBA172, 0xEAA070, 0xEBA06F, 0xEAA070, 0xEBA16F, 0xEBA16F, 0xEBA16F, 0xEAA06F, 0xEBA16F, 0xEAA16F, 0xEBA26F, 0xEAA26F, 0xEAA071, 0x872B2B, 0x170F0D, 0x150E0C, 0x170F0E, 0x16100D, 0x16100E, 0x17110E, 0x160F0D, 0x15100E, 0x822423, 0x6A1F1F, 0x6A1F1F, 0xE65F3A, 0xE55F3B, 0xB23A26, 0xB33A27, 0x0F0907, 0x130C0A, 0x130B0A, 0x272021, 0x272022, 0x292325, 0x282022, 0x16110D, 0x16100E, 0x170F0E, 0x261F22, 0x271F22, 0x262121, 0x282121, 0x271F23, 0x272122, 0x272022, 0x271F22, 0x272121, 0x282022, 0x282022, 0x272121, 0x272022, 0x282022, 0x272022, 0x281E21, 0x272022, 0x271F22, 0x282122, 0xF39460, 0xCC7D55, 0xF0A775, 0xF1A977, 0xECA272, 0xEBA070, 0xEBA270, 0xECA26F, 0xEBA16F, 0xEAA06F, 0xEBA070, 0xEAA06F, 0xEBA070, 0xEBA16F, 0xEBA170, 0xEBA170, 0xEBA371, 0xEBA06E, 0xEDA56F, 0x682424, 0x16100E, 0x16100F, 0x17100F, 0x16110F, 0x150F0D, 0x170F0F, 0x16100E, 0x16100E, 0x872724, 0x6B201F, 0x6B221F, 0xE14D28, 0xDF4925, 0xB53926, 0xB33A26, 0x271F21, 0x281F22, 0x272022, 0x282021, 0x272021, 0x160F0E, 0x16100D, 0x160F0E, 0x160F0F, 0x16100E, 0x262122, 0x272022, 0x261F22, 0x282121, 0x272122, 0x272021, 0x272122, 0x262021, 0x282021, 0x272022, 0x272021, 0x282022, 0x282023, 0x261F22, 0x282021, 0x292122, 0x272121, 0x262022, 0x262022, 0x272022, 0x272020, 0xD27F54, 0xD07F54, 0xD17F53, 0xECA16F, 0xEAA270, 0xEBA16F, 0xEAA16F, 0xEBA16F, 0xEAA16F, 0xEAA16F, 0xEAA16F, 0xEBA16F, 0xECA170, 0xECA170, 0xEBA26F, 0xE89E6E, 0x64261F, 0x150F0F, 0x150F0E, 0x160F0E, 0x170F0E, 0x160F0E, 0x16100F, 0x150E0D, 0x15100E, 0x160F0E, 0x862623, 0x6A211F, 0x6B201F, 0xE4A176, 0xE3A176, 0xB43A27, 0xB43926, 0x282123, 0x272022, 0x272022, 0x261F22, 0x272021, 0x170F0D, 0x160F0E, 0x160F0E, 0x160F0E, 0x170F0E, 0x282122, 0x261F20, 0x261F21, 0x272022, 0x261F22, 0x272023, 0x262022, 0x272121, 0x272021, 0x271F22, 0x282021, 0x262022, 0x272021, 0x271F22, 0x272021, 0x272022, 0x282021, 0x272021, 0x281F22, 0x281F22, 0x262121, 0xD28055, 0xD38055, 0xD38054, 0xECA171, 0xEBA36F, 0xEAA170, 0xEAA270, 0xE9A26F, 0xEBA16F, 0xEAA36F, 0xEAA170, 0xEBA170, 0xEAA070, 0xEBA170, 0xEBA271, 0xE89F6F, 0x64261F, 0x160F0E, 0x160F0D, 0x160E0E, 0x160F0D, 0x170F0E, 0x16100D, 0x15100E, 0x17100E, 0x150F0E, 0x832424, 0x69201F, 0x6A2120, 0xE4A076, 0xE4A174, 0xB33A26, 0xB33A27, 0x272022, 0x272123, 0x16100D, 0x15100E, 0x150F0D, 0x170F0E, 0x170F0E, 0x271F22, 0x282022, 0x272221, 0x272021, 0x272022, 0x262020, 0x282022, 0x282023, 0x262021, 0x272221, 0x272022, 0x282123, 0x292120, 0x282022, 0x282022, 0x272122, 0x272022, 0x262123, 0x282022, 0x282122, 0x272022, 0x282021, 0x272123, 0x271F22, 0x16100D, 0x170F0D, 0x140D0B, 0xD17F54, 0xD17F53, 0xD17E53, 0xD27E53, 0xF1A876, 0xEAA16F, 0xEBA170, 0xEAA06F, 0xEBA26F, 0xEAA26F, 0xEAA16E, 0xD98C61, 0x79322C, 0x170F0E, 0x16100D, 0x180F0D, 0x150F0E, 0x16100E, 0x17100F, 0x16100E, 0x160F0D, 0x16100E, 0x170F0E, 0x822725, 0x6B211E, 0x6B2020, 0xE15B35, 0xE25B34, 0x742222, 0x732323, 0x261F22, 0x272021, 0x150F0E, 0x16100E, 0x160F0E, 0x16100E, 0x16100E, 0x272022, 0x262022, 0x271F21, 0x282021, 0x282122, 0x262021, 0x281F22, 0x272023, 0x261F22, 0x262022, 0x271F22, 0x282222, 0x282021, 0x272122, 0x272021, 0x282022, 0x282022, 0x272021, 0x272022, 0x282122, 0x272122, 0x272122, 0x282022, 0x272022, 0x160F0E, 0x160F0E, 0x15100B, 0xD27E52, 0xD18053, 0xD07E53, 0xD17E53, 0xEEA674, 0xEAA16F, 0xEBA170, 0xEBA070, 0xEAA170, 0xEAA06F, 0x4E2119, 0x441E17, 0x150F0E, 0x17100D, 0x16100E, 0x16100E, 0x15100E, 0x16100F, 0x160F0D, 0x17100E, 0x160F0F, 0x160E0E, 0x16100E, 0x7F2724, 0x6A1F1F, 0x6C211F, 0xE25933, 0xE15A34, 0x732323, 0x722322, 0x160F0E, 0x17100D, 0x16100F, 0x150F0D, 0x160F0E, 0x262022, 0x272022, 0x272021, 0x272022, 0x272021, 0x292022, 0x272023, 0x271F22, 0x272122, 0x292021, 0x261F22, 0x272022, 0x272022, 0x272122, 0x281F22, 0x272022, 0x272022, 0x272022, 0x272022, 0x262023, 0x272022, 0x272021, 0x261F21, 0x292122, 0x282123, 0x272022, 0x272122, 0x262022, 0x282022, 0x170F0E, 0x180F0E, 0x8B4133, 0x8E4133, 0x15110D, 0x1B1310, 0x1D1511, 0x19110E, 0x1A130E, 0x1E130F, 0x170F0E, 0x160F0E, 0x15100E, 0x160F0E, 0x160F0E, 0x17100D, 0x16100D, 0x16100D, 0x160F0F, 0x150F0E, 0x160F0D, 0x160F0D, 0x160E0E, 0xFF753F, 0xE96137, 0xE96136, 0xC03F27, 0xBD3F26, 0x732321, 0x732221, 0x16100E, 0x16100F, 0x170F0E, 0x160F0E, 0x16100E, 0x272123, 0x272023, 0x272121, 0x282122, 0x282022, 0x271F23, 0x282021, 0x272022, 0x262022, 0x282122, 0x281F22, 0x272023, 0x272122, 0x282023, 0x272122, 0x272023, 0x272022, 0x282123, 0x272122, 0x282122, 0x272022, 0x272122, 0x262122, 0x272022, 0x282122, 0x262022, 0x272122, 0x272022, 0x292123, 0x16100E, 0x170F0E, 0x8B4032, 0x8B4133, 0x180F0F, 0x16100D, 0x16100E, 0x160F0E, 0x160F0D, 0x150F0E, 0x17100E, 0x17110E, 0x16100F, 0x150E0E, 0x16110D, 0x150F0E, 0x16100E, 0x150F0E, 0x16100E, 0x160F0E, 0x170F0E, 0x150E0E, 0x160F0E, 0xFE733E, 0xED6338, 0xEB6336, 0xBC3E27, 0xBC3E26, 0x722221, 0x722223, 0x150F0D, 0x16100E, 0x160F0D, 0x150F0E, 0x160F0D, 0x282222, 0x272021, 0x282021, 0x282120, 0x272022, 0x272121, 0x272022, 0x272122, 0x282022, 0x271F20, 0x262022, 0x282121, 0x282123, 0x282023, 0x272122, 0x281F23, 0x282022, 0x281F21, 0x282022, 0x272021, 0x272022, 0x272022, 0x262121, 0x282121, 0x282122, 0x272223, 0x282021, 0x282121, 0x282122, 0x160F0E, 0x16100D, 0x893F34, 0x8B4033, 0x19110E, 0x160F0E, 0x160E0D, 0x16100E, 0x15110E, 0x160F0D, 0x150F0D, 0x170F0E, 0x160E0C, 0x160F0E, 0x16100E, 0x150F0D, 0x150F0E, 0x170F0F, 0x170E0D, 0x160F0E, 0x16100E, 0x15110D, 0x160F0D, 0xFB6B3D, 0xEB6138, 0xE9613A, 0xBA3B26, 0xBB3B27, 0x722022, 0x732220, 0x16100E, 0x16100D, 0x120D0A, 0x272022, 0x272021, 0x272022, 0x272121, 0x271F22, 0x272022, 0x272023, 0x272122, 0x282123, 0x262121, 0x282022, 0x272122, 0x271E22, 0x282022, 0x271F21, 0x282122, 0x170F0E, 0x17100E, 0x170E0F, 0x16100F, 0x180F0D, 0x16100E, 0x17100C, 0x171211, 0x282122, 0x272022, 0x282022, 0x272022, 0x272123, 0x281F22, 0x272121, 0x282023, 0x262022, 0x17100E, 0x160F0D, 0x150F0D, 0x16100E, 0x15100D, 0x160F0E, 0x160F0D, 0x160F0D, 0x481F17, 0x482018, 0x462018, 0x170F0E, 0x170F0D, 0x160F0E, 0x160E0D, 0x16100F, 0x15100E, 0x160F0C, 0x150F0E, 0x16100D, 0x160F0D, 0xF5B481, 0xE4A176, 0xE3A078, 0x6E2021, 0x6E2120, 0xB83927, 0xB83A27, 0x16100E, 0x150E0E, 0x130C08, 0x272022, 0x281F22, 0x272022, 0x272022, 0x282021, 0x282122, 0x271F21, 0x282022, 0x262022, 0x282122, 0x262021, 0x272022, 0x272023, 0x282022, 0x282122, 0x272021, 0x16100E, 0x160F0D, 0x16100F, 0x16100E, 0x160F0D, 0x160F0D, 0x160F0D, 0x1E1617, 0x272121, 0x272022, 0x272021, 0x272023, 0x282022, 0x282022, 0x272023, 0x282022, 0x272121, 0x150F0E, 0x160F0D, 0x170F0E, 0x150F0E, 0x160F0D, 0x170F0E, 0x160E0E, 0x16100E, 0x482118, 0x472017, 0x461F18, 0x160F0D, 0x160F0D, 0x160F0E, 0x16100D, 0x160E0E, 0x150F0E, 0x170F0F, 0x17100E, 0x15100E, 0x150F0D, 0xF7B07E, 0xE3A175, 0xE3A277, 0x6E2120, 0x6F2121, 0xB73B27, 0xB53A26, 0x170F0E, 0x170F0E, 0x140D0A, 0x272022, 0x262121, 0x261F23, 0x272023, 0x272021, 0x272123, 0x272021, 0x272122, 0x272022, 0x262021, 0x272022, 0x272022, 0x272123, 0x282123, 0x170F0E, 0x170F0F, 0x261F21, 0x272122, 0x282021, 0x272022, 0x282121, 0x272023, 0x272022, 0x201A1A, 0x17100E, 0x160F0E, 0x272122, 0x272121, 0x272022, 0x282023, 0x272021, 0x262123, 0x272122, 0x272023, 0x262022, 0x16100E, 0x160F0D, 0x160F0D, 0x271F21, 0x272022, 0x150F0E, 0x462019, 0x472017, 0x442019, 0x160F0E, 0x160F0D, 0x16100E, 0x160F0E, 0x15100E, 0x160F0D, 0x17100E, 0x150F0C, 0xD44F2F, 0xD34F2E, 0xD34E2F, 0xD24E2E, 0xD34D2E, 0xB33A25, 0xB33927, 0xB63A25, 0xB63B25, 0x16100E, 0x15100E, 0x140C0A, 0x272022, 0x272022, 0x282021, 0x272022, 0x272022, 0x272021, 0x272122, 0x272121, 0x282022, 0x272022, 0x272122, 0x282122, 0x282021, 0x282222, 0x160E0E, 0x16100D, 0x282021, 0x282122, 0x282122, 0x272122, 0x282122, 0x282022, 0x272022, 0x1F191A, 0x16100D, 0x17110E, 0x272022, 0x272121, 0x272122, 0x282122, 0x272021, 0x272021, 0x272022, 0x272022, 0x271F22, 0x17100D, 0x150F0D, 0x160F0F, 0x271F21, 0x272021, 0x16100E, 0x481F17, 0x481F17, 0x441F18, 0x16100E, 0x15100E, 0x15100E, 0x170F0E, 0x16100D, 0x160F0E, 0x150F0C, 0x160F0E, 0xD34E2F, 0xD34D2E, 0xD34E2D, 0xD34F2F, 0xD44F2E, 0xB23B26, 0xB33926, 0xB43A26, 0xB53B26, 0x16100E, 0x15100C, 0x150E0B, 0x282022, 0x262022, 0x272022, 0x271F21, 0x282122, 0x281F21, 0x272122, 0x272021, 0x281F21, 0x282122, 0x262022, 0x2A2326, 0x17100E, 0x150F0D, 0x221A1B, 0x221B1B, 0x262022, 0x282023, 0x272122, 0x272121, 0x282023, 0x272022, 0x282122, 0x262021, 0x261F1F, 0x241E1E, 0x150F0D, 0x1B1512, 0x282022, 0x271F21, 0x272022, 0x272023, 0x271F21, 0x272022, 0x272022, 0x150E0C, 0x16100E, 0x16100D, 0x262022, 0x272022, 0x251E1D, 0x2D1F1C, 0x341F1C, 0x381E17, 0x170F0E, 0x160F0E, 0x160F0E, 0x15100E, 0x16100D, 0x16100E, 0x16100D, 0x16100D, 0xDE835C, 0xE38E68, 0x771816, 0x7E2722, 0x862B22, 0xC94629, 0xC7442A, 0xB53B25, 0xB63B25, 0x150F0E, 0x16100E, 0x140D0C, 0x272122, 0x262122, 0x271F22, 0x272021, 0x272022, 0x282022, 0x271F22, 0x272022, 0x282122, 0x282021, 0x272121, 0x2A2124, 0x16100E, 0x17100E, 0x272121, 0x272022, 0x272023, 0x282123, 0x272022, 0x272123, 0x272022, 0x271F22, 0x282021, 0x272021, 0x272121, 0x292123, 0x160F0D, 0x170F0D, 0x282022, 0x282023, 0x271F22, 0x272122, 0x282122, 0x272022, 0x282122, 0x272021, 0x272122, 0x272021, 0x282022, 0x272021, 0x272023, 0x272022, 0x272023, 0x282021, 0x170E0E, 0x150E0D, 0x150F0E, 0x16100F, 0x17110F, 0x160F0D, 0x150E0E, 0x160F0D, 0xECB08E, 0xEBB18E, 0x5D0E15, 0x722121, 0x722021, 0xCB482B, 0xCC492B, 0xB53B27, 0xB53B26, 0x170E0E, 0x150F0E, 0x150F0C, 0x272022, 0x272022, 0x272022, 0x272023, 0x272022, 0x282022, 0x282023, 0x282021, 0x272121, 0x272123, 0x271F23, 0x282324, 0x16100E, 0x16100E, 0x262022, 0x282021, 0x272022, 0x282022, 0x282122, 0x272122, 0x272122, 0x272021, 0x282021, 0x272023, 0x271F22, 0x272021, 0x17100E, 0x16100E, 0x261F22, 0x272121, 0x282122, 0x282022, 0x282022, 0x282022, 0x272122, 0x272121, 0x272022, 0x281F22, 0x282022, 0x262022, 0x262021, 0x292123, 0x282122, 0x292023, 0x160F0D, 0x16100E, 0x16100D, 0x15100E, 0x15100E, 0x16100E, 0x160F0D, 0x160F0D, 0xECAF8E, 0xECB08D, 0x5E0D13, 0x702121, 0x732021, 0xCC482A, 0xCD472A, 0xB53B26, 0xB63B27, 0x160F0D, 0x160F0D, 0x150F0C, 0x272023, 0x282023, 0x282023, 0x272222, 0x272022, 0x282022, 0x282121, 0x272121, 0x282122, 0x261F22, 0x262023, 0x2A2325, 0x170F0F, 0x18100E, 0x292123, 0x272023, 0x282122, 0x271F22, 0x272121, 0x272122, 0x282020, 0x282022, 0x272022, 0x282022, 0x282021, 0x272021, 0x272122, 0x282122, 0x160F0E, 0x16100E, 0x18100F, 0x272023, 0x272021, 0x281F22, 0x282123, 0x282022, 0x272023, 0x272022, 0x282122, 0x282122, 0x282123, 0x462118, 0x471F18, 0x481F16, 0x150F0C, 0x150F0D, 0x16110D, 0x160F0E, 0x17100E, 0x180F0E, 0x772223, 0x762222, 0x762222, 0x762122, 0xDD4E2C, 0xCB482B, 0xCD492C, 0xCC492B, 0xCD492A, 0xDC7A25, 0xDA7A24, 0x16100D, 0x160F0E, 0x191110, 0x272021, 0x272021, 0x272122, 0x272021, 0x272021, 0x272022, 0x272222, 0x272121, 0x272021, 0x272022, 0x282122, 0x2A2426, 0x170F0D, 0x16100C, 0x282121, 0x272122, 0x282123, 0x282021, 0x272021, 0x272122, 0x282022, 0x282120, 0x272021, 0x272022, 0x272121, 0x282021, 0x272122, 0x272022, 0x16100E, 0x160F0E, 0x16100E, 0x272022, 0x272022, 0x282222, 0x272021, 0x272122, 0x282022, 0x272021, 0x282122, 0x272022, 0x282022, 0x462019, 0x481F17, 0x471F18, 0x160F0E, 0x15100D, 0x18100F, 0x16110E, 0x170F0D, 0x16100D, 0x772222, 0x772222, 0x762223, 0x752222, 0xE04E2D, 0xCC492B, 0xCC482B, 0xCC482A, 0xCC492B, 0xDA7A25, 0xDA7923, 0x150F0D, 0x160F0F, 0x1B1313, 0x272121, 0x271F22, 0x272022, 0x272022, 0x272122, 0x272021, 0x282022, 0x262022, 0x282022, 0x271F21, 0x272022, 0x2A2324, 0x160F0E, 0x150F0E, 0x272022, 0x282123, 0x272122, 0x292022, 0x282022, 0x272021, 0x272122, 0x282121, 0x282122, 0x272121, 0x272022, 0x282023, 0x272023, 0x282123, 0x282022, 0x272022, 0x2D2729, 0x160F0E, 0x16100E, 0x282122, 0x262020, 0x272022, 0x282022, 0x272021, 0x282022, 0x282122, 0x281F22, 0x150F0E, 0x16100E, 0x16100D, 0x160F0E, 0x160F0C, 0x160F0D, 0x6D2121, 0x712122, 0x721F21, 0x772123, 0x772022, 0xD54D2C, 0xCB472A, 0xCB4929, 0xCC4A2B, 0xCB482A, 0xDB7927, 0xDA7A26, 0xC95F20, 0xCA601F, 0x150F0E, 0x160F0D, 0x1B1513, 0x271F22, 0x262021, 0x272022, 0x272122, 0x262022, 0x282022, 0x271F22, 0x272022, 0x272023, 0x282122, 0x272022, 0x292325, 0x17100E, 0x150F0F, 0x282021, 0x282022, 0x272021, 0x282123, 0x272122, 0x272022, 0x272122, 0x272022, 0x282022, 0x272122, 0x272021, 0x282021, 0x272021, 0x262021, 0x272021, 0x272022, 0x2D262A, 0x16110E, 0x16100D, 0x282121, 0x282020, 0x272122, 0x262022, 0x272122, 0x271F22, 0x272022, 0x272021, 0x150E0C, 0x16100E, 0x170F0E, 0x160F0D, 0x160F0E, 0x16100E, 0x762223, 0x752222, 0x762222, 0x772323, 0x762222, 0xCE492A, 0xCD492A, 0xCD492A, 0xCE482B, 0xCB462A, 0xDA7A26, 0xDB7927, 0xCB5F21, 0xCA5F1F

##############################################################################
# Mutable Data
##############################################################################

##############################################################################
# Code
##############################################################################
	.text
	.globl main

game_start:

lw $t0, ADDR_DSPL
lw $t8, ADDR_KBRD

    li   $a0, 0         # starting x
    li   $a1, 0         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw

    li   $a0, 16         # starting x
    li   $a1, 0         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw
    
    li   $a0, 32         # starting x
    li   $a1, 0         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw
    
    li   $a0, 48         # starting x
    li   $a1, 0         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw
    
    li   $a0, 0         # starting x
    li   $a1, 16         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 16         # starting x
    li   $a1, 16         # starting y
    la   $a2, title1 # sprite array pointer
    jal sprite_draw
    
    li   $a0, 32         # starting x
    li   $a1, 16         # starting y
    la   $a2, title2 # sprite array pointer
    jal sprite_draw
    
    li   $a0, 48         # starting x
    li   $a1, 16         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    
    li   $a0, 0         # starting x
    li   $a1, 32         # starting y
    la   $a2, diff1 # sprite array pointer
    jal sprite_draw

    li   $a0, 16         # starting x
    li   $a1, 32         # starting y
    la   $a2, diff2 # sprite array pointer
    jal sprite_draw
    
    li   $a0, 32         # starting x
    li   $a1, 32         # starting y
    la   $a2, diff3 # sprite array pointer
    jal sprite_draw
    
    li   $a0, 48         # starting x
    li   $a1, 32         # starting y
    la   $a2, diff4 # sprite array pointer
    jal sprite_draw
    
    
    li   $a0, 0         # starting x
    li   $a1, 48         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw

    li   $a0, 16         # starting x
    li   $a1, 48         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw
    
    li   $a0, 32         # starting x
    li   $a1, 48         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw
    
    li   $a0, 48         # starting x
    li   $a1, 48         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw
    

lw $t9, ADDR_KBRD # set t9 as the input from keyboard
lw $t8, 0($t9) # set t9 to the first word in the keyboard input

beq $t8, 0, game_start      # If t9 == 0, (if no key is pressed), go straight to collide check
lw $t8, 4($t9)                    # load the second word into $t9

# EASY
    bne $t8, 0x31, medium
    add $t7, $zero, 2
    j game_dif_set

medium:
    bne $t8, 0x32, hard
    add $t7, $zero, 4
    j game_dif_set

hard:
    bne $t8, 0x33, game_start
    add $t7, $zero, 6
    j game_dif_set

game_dif_set:

    addi $sp, $sp, -12     # Allocate space on stack (3 registers * 4 bytes each)
    sw $t7, 8($sp)         # Save $t7
    sw $t8, 4($sp)         # Save $t8
    sw $t9, 0($sp)         # Save $t9

    li   $a0, 0         # starting x
    li   $a1, 0         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw

    li   $a0, 16         # starting x
    li   $a1, 0         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 32         # starting x
    li   $a1, 0         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 48         # starting x
    li   $a1, 0         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 0         # starting x
    li   $a1, 16         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 16         # starting x
    li   $a1, 16         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 32         # starting x
    li   $a1, 16         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 48         # starting x
    li   $a1, 16         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    
    li   $a0, 0         # starting x
    li   $a1, 32         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw

    li   $a0, 16         # starting x
    li   $a1, 32         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 32         # starting x
    li   $a1, 32         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 48         # starting x
    li   $a1, 32         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 0         # starting x
    li   $a1, 48         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw

    li   $a0, 16         # starting x
    li   $a1, 48         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 32         # starting x
    li   $a1, 48         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 48         # starting x
    li   $a1, 48         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    lw $t7, 8($sp)         # Restore $t7
    lw $t8, 4($sp)         # Restore $t8
    lw $t9, 0($sp)         # Restore $t9
    addi $sp, $sp, 12      # Free stack space (move $sp back)

# a0 = 10, a1 = 15, t6 = 30, a2/orientation = horizontal, color/a3 = white
upper_horizontal_line:
add $a0, $zero, 15          #x-axis
add $a1, $zero, 30          #y-axis
add $t6, $zero, 23          #size
add $a3, $zero, 0xffffff    #color
li $a2, 1                   #flag for horizontal or vertical
li $t4, 0
jal draw_line

# x/a0 = 10, y/a1 = 15, size/t6 = 40, a2/orientation = vertical, color/a3 = white
left_vertical_line:
add $a0, $zero, 15          #x-axis
add $a1, $zero, 31          #y-axis
add $t6, $zero, 24          #size
add $a3, $zero, 0xffffff    #color
li $a2, 0                   #flag for horizontal or vertical
li $t4, 0
jal draw_line

# x/a0 = 10, y/a1 = 15, size/t6 = 40, a2/orientation = vertical, color/a3 = white
right_vertical_line:
add $a0, $zero, 37          #x-axis
add $a1, $zero, 31          #y-axis
add $t6, $zero, 24          #size
add $a3, $zero, 0xffffff    #color
li $a2, 0                   #flag for horizontal or vertical
li $t4, 0
jal draw_line

# x/a0 = 10, y/a1 = 55, size/t6 = 30, a2/orientation = horizontal, color/a3 = white
lower_horizontal_line:
add $a0, $zero, 15          #x-axis
add $a1, $zero, 55          #y-axis
add $t6, $zero, 23          #size
add $a3, $zero, 0xffffff    #color
li $a2, 1                   #flag for horizontal or vertical
li $t4, 0
jal draw_line

# x/a0 = 10, y/a1 = 15, size/t6 = 40, a2/orientation = vertical, color/a3 = black
bottle_gap:
add $a0, $zero, 24          #x-axis
add $a1, $zero, 30          #y-axis
add $t6, $zero, 5          #size
add $a3, $zero, 0x000000    #color
li $a2, 1                   #flag for horizontal or vertical
li $t4, 0
jal draw_line

bottle_gap_left_edge:
 add $a0, $zero, 23      # Corrected x = 25
 add $a1, $zero, 28      # y = 5 to match other lines
 add $t6, $zero, 2      # size = 3 pixels
 add $a3, $zero, 0xffffff    #color
 li $a2, 0               # Vertical line
 li $t4, 0
 jal draw_line
 
 bottle_gap_right_edge:
 add $a0, $zero, 29      # Corrected x = 29 (1-pixel gap)
 add $a1, $zero, 28       # y remains 5 to align with line six
 add $t6, $zero, 2       # size = 3 pixels
 add $a3, $zero, 0xffffff    #color
 li $a2, 0               # Vertical line
 li $t4, 0
 jal draw_line

add $t6, $zero, $zero
germ:
    add $t5, $zero, $zero
    jal random_colour
    
    add $t3, $zero, 10
    jal random_coordinate
    add $t1, $zero, $a0
    add $t1, $t1, 40
    
    sll $t5, $t1, 6      # shifts a1 by 6 bits and stores it in t5, equivalent to y * 64
    
    add $t3, $zero, 15
    jal random_coordinate
    add $t2, $zero, $a0
    add $t2, $t2, 19
    
    add $t5, $t5, $t2    # add x offset to t5 to get pixel position
    sll $t5, $t5, 2      # multiply by 4 (word size)
    add $t5, $t5, $t0    # add base address
    
    sw $s3, 0($t5)       # store color
    
    addi $t6, $t6, 1
    beq $t6, $t7, draw_frist_pill
    j germ
    
j draw_frist_pill  # after drawing everything program counter goes to the game loop

# sprite_draw: Draws a 16x16 sprite at its given location,
#             leaving other parts of the bitmap untouched.
# Parameters:
#   a0 = starting x coordinate for the sprite
#   a1 = starting y coordinate for the sprite
#   a2 = pointer to the sprite array (16x16, 256 words)
# Assumptions:
#   - $t0 contains the base address of the bitmap.
#   - get_capsule_address remains unchanged.
sprite_draw:
    # --- Function Prologue: Save registers used by this routine ---
    addi    $sp, $sp, -12
    sw      $ra, 8($sp)
    sw      $s0, 4($sp)
    sw      $s1, 0($sp)

    # Copy parameters into saved registers for convenience.
    move    $s0, $a0        # s0 = starting x
    move    $s1, $a1        # s1 = starting y
    move    $t9, $a2        # t9 = pointer to sprite array

    # Initialize row counter (0 to 15).
    li      $t4, 0

draw_rows:
    beq     $t4, 16, end_draw   # Done if row equals 16.

    # Reset column counter for each new row.
    li      $t5, 0

draw_columns:
    beq     $t5, 16, next_row   # Move to next row if column equals 16.

    # Calculate sprite array index = (row * 16) + column.
    mul     $t6, $t4, 16        # t6 = row * 16.
    add     $t6, $t6, $t5       # t6 = row*16 + column.
    sll     $t6, $t6, 2         # Multiply index by 4 (word size).
    add     $t7, $t9, $t6       # t7 = address of current sprite pixel.

    lw      $t8, 0($t7)         # Load pixel color.


    # Compute destination coordinates:
    #   a0 = starting x + column offset.
    #   a1 = starting y + row offset.
    add     $a0, $s0, $t5
    add     $a1, $s1, $t4
    li      $a2, 1             # Orientation (1, per your design).

    # Call the provided routine to compute the destination address.
    jal     get_capsule_address  # Destination address returned in $t1.

    # Draw the pixel.
    sw      $t8, 0($t1)

skip_draw:
    addi    $t5, $t5, 1        # Next column.
    j       draw_columns

next_row:
    addi    $t4, $t4, 1        # Next row.
    j       draw_rows

end_draw:
    # --- Function Epilogue: Restore saved registers ---
    lw      $s1, 0($sp)
    lw      $s0, 4($sp)
    lw      $ra, 8($sp)
    addi    $sp, $sp, 12
    jr      $ra                # Return to caller.

draw_line:
    sll $t5, $a1, 6      # shifts a1 by 6 bits and stores it in t5, equivalent to y * 64
    add $t5, $t5, $a0    # add x offset to t5 to get pixel position
    sll $t5, $t5, 2      # multiply by 4 (word size)
    add $t5, $t5, $t0    # add base address
    
    sw $a3, 0($t5)       # store color
    
    beq $a2, 1, move_horizontal 
    beq $a2, 0, move_vertical 
    
    postcheck:
    addi $t4, $t4, 1     
    beq $t4, $t6, return_to_caller   # stop when reaching line length
    j draw_line
    
move_horizontal:
    addi $a0, $a0, 1 
    j postcheck
    
move_vertical:
    addi $a1, $a1, 1
    j postcheck
    
return_to_caller:
    jr $ra
    
random_coordinate:
    li $v0, 42
    li $a0, 0
    move $a1, $t3
    syscall
    jr $ra

#INITIAL PILL ON SIDE
draw_frist_pill:
    add $t5, $zero, $zero
    jal random_colour
    add $t5, $zero, 1
    jal random_colour
    
    add $s1, $zero, 40          # X INITIALIZATION
    add $s2, $zero, 23         # Y INITIALIZATION
    li $s5, 0                   # ORIENTATION INITIALIZATION: 0 = vertical and 1 = horizontal
    
    add $s6, $zero, $s1  # temporary X
    add $s7, $zero, $s2  # temporary y
    add $s0, $zero, $s5  # temporary orientation
    
    add $a0, $zero, $s1       # make arg0 = original x
    add $a1, $zero, $s2       # make arg1 = original y
    add $a2, $zero, $s5       # make arg2 = original orientation
    jal get_capsule_address   # get location of original coords and save it to t1 and t2
    add $a0, $zero, $s3       # make arg0 = color1
    add $a1, $zero, $s4       # make arg1 = color2
    jal draw_capsule          # set t1 and t2 locations to black

spawn_pill:


    li   $a0, 0         # starting x
    li   $a1, 0         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw

    li   $a0, 16         # starting x
    li   $a1, 0         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw
    
    li   $a0, 32         # starting x
    li   $a1, 0         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw
    
    li   $a0, 48         # starting x
    li   $a1, 0         # starting y
    la   $a2, brick_wall # sprite array pointer
    jal sprite_draw
    
    
    li   $a0, 40         # starting x
    li   $a1, 47         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li  $a0, 40
    li  $a1, 47
    la   $a2, virus_sprite # sprite array pointer
    jal sprite_draw

    li   $a0, 40         # starting x
    li   $a1, 30         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw

    li   $a0, 40         # starting x
    li   $a1, 27         # starting y
    la   $a2, mario_jump # sprite array pointer
    jal  sprite_draw    
    
    # Save previous values of $v0 and $a0 onto the stack
    addi $sp, $sp, -8    # Make space for two registers
    sw $v0, 4($sp)       # Store $v0 at $sp + 4
    sw $a0, 0($sp)       # Store $a0 at $sp
    # Perform the syscall for sleep
    addi $v0, $zero, 32  # syscall sleep
    addi $a0, $zero, 66  # 17 ms (this is overwritten by the next line)
    addi $a0, $zero, 200 # 17 ms
    syscall
    # Restore previous values of $v0 and $a0 from the stack
    lw $a0, 0($sp)       # Load previous $a0 value
    lw $v0, 4($sp)       # Load previous $v0 value
    addi $sp, $sp, 8     # Restore stack pointer
    
    li   $a0, 40         # starting x
    li   $a1, 47         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li  $a0, 40
    li  $a1, 47
    la   $a2, virus_sprite2 # sprite array pointer
    jal sprite_draw
    
    li   $a0, 40         # starting x
    li   $a1, 27         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 40         # starting x
    li   $a1, 25         # starting y
    la   $a2, mario_jump # sprite array pointer
    jal  sprite_draw
    
    # Save previous values of $v0 and $a0 onto the stack
    addi $sp, $sp, -8    # Make space for two registers
    sw $v0, 4($sp)       # Store $v0 at $sp + 4
    sw $a0, 0($sp)       # Store $a0 at $sp
    # Perform the syscall for sleep
    addi $v0, $zero, 32  # syscall sleep
    addi $a0, $zero, 66  # 17 ms (this is overwritten by the next line)
    addi $a0, $zero, 200 # 17 ms
    syscall
    # Restore previous values of $v0 and $a0 from the stack
    lw $a0, 0($sp)       # Load previous $a0 value
    lw $v0, 4($sp)       # Load previous $v0 value
    addi $sp, $sp, 8     # Restore stack pointer
    
    li   $a0, 40         # starting x
    li   $a1, 47         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li  $a0, 40
    li  $a1, 47
    la   $a2, virus_sprite # sprite array pointer
    jal sprite_draw
    
    li   $a0, 40         # starting x
    li   $a1, 25         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 40         # starting x
    li   $a1, 27         # starting y
    la   $a2, mario_jump # sprite array pointer
    jal  sprite_draw
    
    # Save previous values of $v0 and $a0 onto the stack
    addi $sp, $sp, -8    # Make space for two registers
    sw $v0, 4($sp)       # Store $v0 at $sp + 4
    sw $a0, 0($sp)       # Store $a0 at $sp
    # Perform the syscall for sleep
    addi $v0, $zero, 32  # syscall sleep
    addi $a0, $zero, 66  # 17 ms (this is overwritten by the next line)
    addi $a0, $zero, 200 # 17 ms
    syscall
    # Restore previous values of $v0 and $a0 from the stack
    lw $a0, 0($sp)       # Load previous $a0 value
    lw $v0, 4($sp)       # Load previous $v0 value
    addi $sp, $sp, 8     # Restore stack pointer
    
    li   $a0, 40         # starting x
    li   $a1, 47         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li  $a0, 40
    li  $a1, 47
    la   $a2, virus_sprite2 # sprite array pointer
    jal sprite_draw
    
    li   $a0, 40         # starting x
    li   $a1, 27         # starting y
    la   $a2, black_screen # sprite array pointer
    jal sprite_draw
    
    li   $a0, 40         # starting x
    li   $a1, 30         # starting y
    la   $a2, mario_jump # sprite array pointer
    jal  sprite_draw
    
    #___________________________________________________________#
    actual_pill_draw_start:
        #spawn the pill in 
        addi $a0, $zero, 40       # make arg0 = original x
        addi $a1, $zero, 23      # make arg1 = original y
        add $a2, $zero, 0       # make arg2 = original orientation
        jal get_capsule_address   # get location of original coords and save it to t1 and t2
        
        #lw $t6, 0($t4)
        #save the colours that are in rightside
        lw $t3, 0($t1)
        lw $t4, 0($t2)
        
        #using those colours draw onto real board
        addi $a0, $zero, 26
        addi $a1, $zero, 28
        jal get_capsule_address
        add $a0, $zero, $t3
        add $a1, $zero, $t4
        jal draw_capsule
        
        # draw the new randoms (RANDOM COLOURS SAVED IN S3 AND S4)
        add $t5, $zero, $zero
        jal random_colour
        add $t5, $zero, 1
        jal random_colour
        
        addi $a0, $zero, 40       # make arg0 = original x
        addi $a1, $zero, 23      # make arg1 = original y
        add $a2, $zero, 0       # make arg2 = original orientation
        jal get_capsule_address   # get location of original coords and save it to t1 and t2
        add $a0, $zero, $s3       # make arg0 = color1
        add $a1, $zero, $s4       # make arg1 = color2
        jal draw_capsule          # set t1 and t2 locations to black
        
        add $s3, $zero $t3
        add $s4, $zero, $t4
        
        li $s5, 0                   # ORIENTATION INITIALIZATION: 0 = vertical and 1 = horizontal
        add $s1, $zero, 26
        add $s2, $zero, 28
        
        add $s6, $zero, $s1  # temporary X
        add $s7, $zero, $s2  # temporary y
        add $s0, $zero, $s5  # temporary orientation
    

game_update_loop:
    add $s1, $zero, $s6
    add $s2, $zero, $s7
    add $s5, $zero, $s0

    lw $t9, ADDR_KBRD # set t9 as the input from keyboard
    lw $t8, 0($t9) # set t9 to the first word in the keyboard input
    
    # Sleep for 17 ms so frame rate is about 60
	addi $v0, $zero, 32	# syscall sleep
	addi $a0, $zero, 66	# 17 ms
    addi $a0, $zero, 100	# 17 ms
	syscall
    
    add $a0, $zero, $s1       # make arg0 = original x
    add $a1, $zero, $s2       # make arg1 = original y
    add $a2, $zero, $s5       # make arg2 = original orientation
    jal get_capsule_address   # get location of original coords and save it to t1 and t2
    add $a0, $zero, 0x000000       # make arg0 = color1
    add $a1, $zero, 0x000000       # make arg1 = color2
    jal draw_capsule          # set t1 and t2 locations to black

    addi $s7, $s7, 1    # add 1 to temp y
	
	beq $t8, 0, collide_check      # If t9 == 0, (if no key is pressed), go straight to collide check
	lw $t8, 4($t9)                    # load the second word into $t9
	
    if_for_a: bne $t8, 0x61, if_for_d               # If t9 = (user inputs A), move on to the next instruct, else loop. (pretend its not Q rn)
        addi $s6, $s6, -1
    
    if_for_d: bne $t8, 0x64, if_for_w
        addi $s6, $s6, 1
    
    if_for_w: bne $t8, 0x77, if_for_p
        jal rotate
        
    if_for_p: bne $t8, 0x70, if_for_q
        j pause_game
        wait_for_p:
    
    if_for_q: bne $t8, 0x71, collide_check
        j exit
    
    
    collide_check:
    
        add $a0, $zero, $s6           # make argument 0 = x_temp
        add $a1, $zero, $s7           # make argument 1 = y_temp
        add $a2, $zero, $s0           # make argument 2 = orientation_temp
        jal get_capsule_address       # using arg0, arg1, arg2, get 2 bitmap addresses saved to t1 (first pixel) and t2 (second pixel)
        
        lw $t3, 0($t1)  # load the color at t1 to t3
        lw $t4, 0($t2)  # load the color at t2 to t4

        # checking if either color at t1 and t2 are not black
        bne $t3, $zero, change_values  # If $t3 is not 0x000000, jump to change_values
        bne $t4, $zero, change_values  # If $t4 is not 0x000000, jump to change_values
        
        # there is no collision, so draw the capsule and return to game_loop
        add $a0, $zero, $s3      # make arg0 = color1
        add $a1, $zero, $s4      # make arg1 = color2
        jal draw_capsule
        j game_update_loop
        
        change_values:
        beq $s2, 28, end_game
        
        add $s6, $zero, $s1     # make x_temp into x_original (revert back since there is a collision)
        add $s0, $zero, $s5
        
        add $a0, $zero, $s6           # make argument 0 = x_temp
        add $a1, $zero, $s7           # make argument 1 = y_temp
        add $a2, $zero, $s0           # make argument 2 = orientation_temp
        jal get_capsule_address       # using arg0, arg1, arg2, get 2 bitmap addresses saved to t1 (first pixel) and t2 (second pixel)
        
        lw $t3, 0($t1)
        lw $t4, 0($t2)
        
        # check if new t1 and t2 have collision
        bne $t3, $zero, change_values_2  # If $t3 is not 0x000000, jump to change_values
        bne $t4, $zero, change_values_2  # If $t4 is not 0x000000, jump to change_values
        
        add $a0, $zero, $s3      # make arg0 = color1
        add $a1, $zero, $s4      # make arg1 = color2
        jal draw_capsule
        j game_update_loop
        
        
        change_values_2:
        add $s7, $zero, $s2  # make y_temp into y_original (revert back since there is a collision at y - 1)
        
        add $a0, $zero, $s6           # make argument 0 = x_original
        add $a1, $zero, $s7           # make argument 1 = y_original
        add $a2, $zero, $s0           # make argument 2 = orientation_original
        jal get_capsule_address       # using arg0, arg1, arg2, get 2 bitmap addresses saved to t1 (first pixel) and t2 (second pixel)

        add $a0, $zero, $s3      # make arg0 = color1
        add $a1, $zero, $s4      # make arg1 = color2
        
        jal draw_capsule
        
        jal check_pixels_for_row
        
        finished_check_4:
        
        #j end_game
        j spawn_pill
	        

rotate:
    beq $s5, 1 skip_swap     #check if originally horizontal
    
    add $t1, $zero, $s4     #store temporary colour
    add $s4, $zero, $s3     #set v1 to other colour
    add $s3, $zero, $t1     #swap around
    skip_swap:
    xori $s0, $s0, 1    #toggle the piece
    jr $ra
    
random_colour:
    li $v0, 42          # Random number syscall
    li $a0, 0           # Lower bound (0)
    li $a1, 3           # Upper bound (exclusive) → generates 0, 1, or 2
    syscall             # Random number stored in $a0
    
    beq $t5, 0, pixel_one_set_color
    beq $t5, 1, pixel_two_set_color

pixel_one_set_color:
    beq $a0, 0, color_red
    beq $a0, 1, color_blue
    beq $a0, 2, color_yellow
    
    color_red:
        addi $s3, $zero, 0xFF0000    # Red color
        jr $ra
    
    color_blue:
        addi $s3, $zero, 0x0000FF    # Blue color
        jr $ra
    
    color_yellow:
        addi $s3, $zero, 0xFFFF00    # Yellow color
        jr $ra

pixel_two_set_color:
    beq $a0, 0, color_red2
    beq $a0, 1, color_blue2
    beq $a0, 2, color_yellow2
    color_red2:
        addi $s4, $zero, 0xFF0000    # Red color
        jr $ra
    
    color_blue2:
        addi $s4, $zero, 0x0000FF    # Blue color
        jr $ra
    
    color_yellow2:
        addi $s4, $zero, 0xFFFF00    # Yellow color
        jr $ra

# parameters:
# a0 = x
# a1 = y
# a2 = orientation
# returns: t1 and t2 (location of both capsule halves)
get_capsule_address:
    sll $t1, $a1, 6      # shifts a1 by 6 bits and stores it in t1, equivalent to y * 64
    add $t1, $t1, $a0    # add x offset to t5 to get pixel position
    
    bne $a2, 1 set_t2_vertical  #checks if its horizontal, if so a0 = a0 + 1, else if its vertical: a1 = a1 - 1
    add $a1, $a1, -1
    j translate_coord_to_address
    set_t2_vertical:
    add $a0, $a0, 1
    
    translate_coord_to_address:
    sll $t2, $a1, 6      # shifts a1 by 6 bits and stores it in t5, equivalent to y * 64
    add $t2, $t2, $a0    # add x offset to t5 to get pixel position
    
    sll $t1, $t1, 2      # multiply by 4 (word size)
    sll $t2, $t2, 2
    add $t1, $t1, $t0    # add base address
    add $t2, $t2, $t0
    
    jr $ra

# parameters:
# a0 = color1
# a1 = color2
draw_capsule:
    sw $a0, 0($t1)
    sw $a1, 0($t2)
    jr $ra 
    
check_pixels_for_row:
    
    add $t5, $zero, $s3
    add $t4, $zero, $t1
    addi $t7, $zero, 256 #vertical offset
    jal check_4
    addi $t7, $zero, 4 #horizontal offset
    jal check_4
    
    add $t5, $zero, $s4
    add $t4, $zero, $t2
    addi $t7, $zero, 256 #vertical offset
    jal check_4
    addi $t7, $zero, 4 #horizontal offset
    jal check_4
    
    j finished_check_4
    
check_4:
    addi $v0, $zero, 0 #s0
    addi $v1, $zero, 1 #s1 offset
    #add $t4, $zero, $t1
    add $a3, $zero, $t4
    
    loop:
    addi $t9, $zero, -1 #loading into -1
    blt $v1, $t9, endloop
    mul $t3, $v1, $t7
    add $t4, $t4, $t3
    lw $t6, 0($t4)
    beq $t6, $t5, else_same
        addi $v1, $v1, -2
        add $t4, $zero, $a3
        j loop
        
    else_same:
        addi $v0, $v0, 1
        
    bne $v0, 3, loop
        mul $v1, $v1, -1
        addi $t9, $zero, 0x000000
        sw $t9, 0($t4)
        
        addi $sp, $sp, -4
        sw $ra, 0($sp)
        
        beq $t7, 4, horizontal_falls
        beq $t7, 256, vertical_falls
        
        #hard code idea for now
        #calls gravity every time
        horizontal_falls:
            jal apply_gravity
            lw $ra, 0($sp)
            addi $sp, $sp, 4
            
            loop2_horizontal: beq $v0, 0, loop
                mul $t3, $v1, $t7
                add $t4, $t4, $t3
                sw $t9, 0($t4)
                
                addi $sp, $sp, -4
                sw $ra, 0($sp)
                jal apply_gravity
                lw $ra, 0($sp)
                addi $sp, $sp, 4
                
                addi $v0, $v0, -1
                j loop2_horizontal
         
        #idea is basically jus call gravity when last block is deleted (because they are all stacked on eacother)
        vertical_falls:
            lw $ra, 0($sp)
            addi $sp, $sp, 4
            
            loop2_vertical: beq $v0, 0, loop
                
                mul $t3, $v1, $t7
                add $t4, $t4, $t3
                sw $t9, 0($t4)
            
                addi $sp, $sp, -4
                sw $ra, 0($sp)
                lw $ra, 0($sp)
                addi $sp, $sp, 4
                
                beq $v0, 1, apply_gravity
                
                addi $v0, $v0, -1
                j loop2_vertical
    
    endloop: jr $ra

apply_gravity:
    add $a1, $zero, $t4
    
    #revise this (didnt make sense for a3 cuz a3 wasnt getting updated so i was confused)
    loop_to_bottom:
    lw $t6, 256($a1) #prev was checking a3 itself
    bne $t6, 0x000000, escape_loop
    addi $a1, $a1, 256 #idk it was a3 before but stuf wasnt working not fully tested (prev a1, a3 + 256
    j loop_to_bottom
    
    escape_loop:
    add $a2, $zero, $a1
    addi $t3, $zero, 0
    bottle_up_loop:
        addi $t3, $t3, 1
        addi $a2, $a2, -256
        lw $t6, 0($a2)
        beq $t6, 0xffffff, skip_check
        beq $t6, 0xA55324, skip_check
        beq $t6, 0x3C1E0D, skip_check
        beq $t6, 0x5E2F15, skip_check
        bne $t6, 0x000000, switch_colors  # If $t3 is not 0x000000, jump to switch_colors
        
        skip_check:
        beq $t3, 24, exit_loop      # Branch to bottle_up_loop if $a2 < 6144
        j bottle_up_loop
        
    switch_colors:
        sw $t6 0($a1)
        
# Save previous values of $v0 and $a0 onto the stack
    addi $sp, $sp, -8    # Make space for two registers
    sw $v0, 4($sp)       # Store $v0 at $sp + 4
    sw $a0, 0($sp)       # Store $a0 at $sp

    # Perform the syscall for sleep
    addi $v0, $zero, 32  # syscall sleep
    addi $a0, $zero, 66  # 17 ms (this is overwritten by the next line)
    addi $a0, $zero, 100 # 17 ms
    syscall

    # Restore previous values of $v0 and $a0 from the stack
    lw $a0, 0($sp)       # Load previous $a0 value
    lw $v0, 4($sp)       # Load previous $v0 value
    addi $sp, $sp, 8     # Restore stack pointer
        
        addi $t3, $zero, 0x000000
        sw $t3 0($a2)
        addi $a1, $a1, -256
        j bottle_up_loop
    exit_loop: jr $ra

exit:
	li $v0, 10                      # Quit gracefully
	syscall
    
    
end_game:
    lw $t0, ADDR_DSPL  
    
    li $t2, 0      # Reset X coordinate
    li $a3, 0x000000  # Start with black
    li $t7, 0      # Flash counter (counts black->white->black cycles)

flash_loop:
    li $t2, 0  # Reset X coordinate
    
draw_loop:
    li $a1, 0
    addi $a0, $t2, 0
    li $t5, 0
    li $t4, 0
    addi $t6, $zero, 64
    
    jal draw_line  # Draw the line (or pixel)
    
    addi $t2, $t2, 1
    beq $t2, 64, toggle_color  # If x == 64, toggle color
    
    j draw_loop

toggle_color:
    # Sleep for ~60 FPS
    addi $v0, $zero, 32
    addi $a0, $zero, 17
    syscall
    
    # Toggle color between black and white
    li $t1, 0x000000  # White
    beq $a3, $t1, set_black
    li $a3, 0x000000  # Set to white
    j flash_loop
    
set_black:
    li $a3, 0xffffff  # Set to black
    addi $t7, $t7, 1  # Increment flash counter
    
    # Check if we flashed 5 times (black → white → black counts as one)
    li $t8, 15
    beq $t7, $t8, uji_draw  # If 5 flashes, go to uji_draw
    
    j flash_loop
    
    j uji_draw
    
    
    
uji_draw:
    beq $t6, 1, game_start
    
    li   $a0, 0         # starting x
    li   $a1, 0         # starting y
    la   $a2, jackie_art # sprite array pointer
    jal  sprite_draw_64    
    
     
    
    # Finished drawing "GAME OVER"

    lw $t9, ADDR_KBRD # set t9 as the input from keyboard
    lw $t8, 0($t9) # set t9 to the first word in the keyboard input
    
    beq $t8, 0, uji_draw      # If t9 == 0, (if no key is pressed), go straight to collide check
	lw $t8, 4($t9)                    # load the second word into $t9
	
	bne $t8, 0x72, uji_draw
	j clear_and_go_start
    
clear_and_go_start:
    lw $t0, ADDR_DSPL  
    
    li $a0, 0 #x coor
    li $a1, 0 #y coor
    
    li $a3, 0x000000    
    li $a2, 0 #vertical lines
    
    li $t2, 0
    
    draw_loop2:
        li $a1, 0
        addi $a0, $t2, 0
        li $t5, 0
        li $t4, 0
        addi $t6, $zero, 64
        
        jal draw_line          # draw the line (or pixel)
        
        addi $t2, $t2, 1       # increment x-coordinate
        beq $t2, 64, game_start # if x == 128, move to next row
        
        j draw_loop2
        
    pause_game:    
        #line_1
        # Line 1 - First Vertical Line
        add $a0, $zero, 3     # x = 125 (near right edge of 128x128 screen)
        add $a1, $zero, 2       # y = 0 (top of the screen)
        add $t6, $zero, 3      # Length = 20 pixels
        li $a2, 0               # Vertical line
        li $a3, 0xFFFFFF        # White color
        li $t4, 0
        jal draw_line
        
        add $a0, $zero, 5     # x = 125 (near right edge of 128x128 screen)
        add $a1, $zero, 2       # y = 0 (top of the screen)
        add $t6, $zero, 3      # Length = 20 pixels
        li $a2, 0               # Vertical line
        li $a3, 0xFFFFFF        # White color
        li $t4, 0
        jal draw_line
        
        #line_2
        
        wait:
        # Sleep for 17 ms so frame rate is about 60
    	addi $v0, $zero, 32	# syscall sleep
    	addi $a0, $zero, 66	# 17 ms
        addi $a0, $zero, 100	# 17 ms
    	syscall
        
        lw $t8, ADDR_KBRD
        beq $t8, 0, wait      # If t9 == 0, (if no key is pressed), go back to game_paused
    	lw $t8, 4($t9)                    # load the second word into $t9
    	
    	bne $t8, 0x72, wait	
    	
    	#line_1
        # Line 1 - First Vertical Line
        add $a0, $zero, 3     # x = 125 (near right edge of 128x128 screen)
        add $a1, $zero, 2       # y = 0 (top of the screen)
        add $t6, $zero, 3      # Length = 20 pixels
        li $a2, 0               # Vertical line
        li $a3, 0x000000        # White color
        li $t4, 0
        jal draw_line
        
        add $a0, $zero, 5     # x = 125 (near right edge of 128x128 screen)
        add $a1, $zero, 2       # y = 0 (top of the screen)
        add $t6, $zero, 3      # Length = 20 pixels
        li $a2, 0               # Vertical line
        li $a3, 0x000000        # White color
        li $t4, 0
        jal draw_line
        
        j wait_for_p
    
    
sprite_draw_64:
    # --- Function Prologue: Save registers used by this routine ---
    addi    $sp, $sp, -12
    sw      $ra, 8($sp)
    sw      $s0, 4($sp)
    sw      $s1, 0($sp)

    # Copy parameters into saved registers for convenience.
    move    $s0, $a0        # s0 = starting x
    move    $s1, $a1        # s1 = starting y
    move    $t9, $a2        # t9 = pointer to sprite array

    # Initialize row counter (0 to 63).
    li      $t4, 0

draw_rows_64:
    beq     $t4, 64, end_draw_64   # Done if row equals 64.

    # Reset column counter for each new row.
    li      $t5, 0

draw_columns_64:
    beq     $t5, 64, next_row_64   # Move to next row if column equals 64.

    # Calculate sprite array index = (row * 64) + column.
    mul     $t6, $t4, 64        # t6 = row * 64.
    add     $t6, $t6, $t5       # t6 = row*64 + column.
    sll     $t6, $t6, 2         # Multiply index by 4 (word size).
    add     $t7, $t9, $t6       # t7 = address of current sprite pixel.

    lw      $t8, 0($t7)         # Load pixel color.


    # Compute destination coordinates:
    #   a0 = starting x + column offset.
    #   a1 = starting y + row offset.
    add     $a0, $s0, $t5
    add     $a1, $s1, $t4
    li      $a2, 1             # Orientation (1, per your design).

    # Call the provided routine to compute the destination address.
    jal     get_capsule_address  # Destination address returned in $t1.

    # Draw the pixel.
    sw      $t8, 0($t1)

skip_draw_64:
    addi    $t5, $t5, 1        # Next column.
    j       draw_columns_64

next_row_64:
    addi    $t4, $t4, 1        # Next row.
    j       draw_rows_64

end_draw_64:
    # --- Function Epilogue: Restore saved registers ---
    lw      $s1, 0($sp)
    lw      $s0, 4($sp)
    lw      $ra, 8($sp)
    addi    $sp, $sp, 12
    jr      $ra                # Return to caller.
